Search.setIndex({"docnames": ["index", "modules", "source/benchmark_docs/cma", "source/benchmark_docs/fastdownward", "source/benchmark_docs/geometric", "source/benchmark_docs/luby", "source/benchmark_docs/modcma", "source/benchmark_docs/sgd", "source/benchmark_docs/sigmoid", "source/benchmark_docs/theory", "source/benchmark_docs/toy_sgd", "source/benchmarks", "source/cite", "source/containers", "source/contrib", "source/dac", "source/installation", "source/logging", "source/modifications", "source/modules", "source/multi_agent_dac", "source/plotting", "source/state_and_reward", "source/wrappers"], "filenames": ["index.rst", "modules.rst", "source/benchmark_docs/cma.rst", "source/benchmark_docs/fastdownward.rst", "source/benchmark_docs/geometric.rst", "source/benchmark_docs/luby.rst", "source/benchmark_docs/modcma.rst", "source/benchmark_docs/sgd.rst", "source/benchmark_docs/sigmoid.rst", "source/benchmark_docs/theory.rst", "source/benchmark_docs/toy_sgd.rst", "source/benchmarks.rst", "source/cite.rst", "source/containers.rst", "source/contrib.rst", "source/dac.rst", "source/installation.rst", "source/logging.rst", "source/modifications.rst", "source/modules.rst", "source/multi_agent_dac.rst", "source/plotting.rst", "source/state_and_reward.rst", "source/wrappers.rst"], "titles": ["Welcome to DACBench\u2019s documentation!", "dacbench", "The PyCMA CMA-ES Benchmark", "The FastDownward Benchmark", "The Geometric Toy Benchmark", "The Luby Toy Benchmark", "The IOHProfiler ModCMA Benchmark", "The SGD Deep Learning Benchmark", "The Sigmoid Toy Benchmark", "The Theory Benchmark", "The ToySGD Benchmark", "Benchmark Overview", "Citing DACBench", "Using DACBench Containers", "Contributing to DACBench", "Dynamic Algorithm Configuration - A Short Overview", "How to Install DACBench", "Logging Experiments", "Saving &amp; Loading Benchmark Configurations", "dacbench", "Multi-Agent DAC", "Plotting results", "Modifying Observations &amp; Cost", "Functionality through Wrappers"], "terms": {"dynam": [0, 3, 5, 7, 8, 9, 12], "algorithm": [0, 2, 3, 5, 6, 8, 9, 11, 12, 14, 16, 20, 22], "configur": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 20, 22], "A": [0, 2, 5, 8, 9, 12, 17, 22], "short": [0, 3, 14], "overview": 0, "how": [0, 9, 13, 14, 15], "instal": [0, 13, 14], "contain": [0, 4, 6, 9, 11, 16, 21], "sigmoid": [0, 3, 4, 5, 11, 14, 18, 20], "toi": [0, 3, 10, 11, 14], "lubi": [0, 3, 11], "toysgd": [0, 11, 20], "geometr": [0, 11, 20], "fastdownward": [0, 11, 16], "theori": [0, 11, 16], "pycma": [0, 16], "cma": [0, 6, 10, 11, 13, 14, 16], "e": [0, 4, 5, 6, 7, 9, 10, 11, 14, 15, 16, 17, 18, 21, 23], "iohprofil": [0, 11, 16, 20], "modcma": [0, 11, 16, 20], "sgd": [0, 10, 11, 15, 16], "deep": 0, "learn": [0, 2, 3, 5, 10, 11, 15, 20], "save": [0, 11, 17, 22], "load": [0, 11, 17, 21], "multi": [0, 11], "agent": [0, 9, 11, 17], "dac": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 17, 22], "modifi": [0, 5, 11, 14, 18], "observ": [0, 4, 5, 9, 11, 14, 20, 23], "cost": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10], "function": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 14, 17, 18, 20, 21, 22], "through": [0, 4, 6, 11, 14, 20], "wrapper": [0, 11, 14, 17, 18, 21], "log": [0, 7, 10, 21, 22, 23], "experi": [0, 5, 15], "plot": [0, 4, 23], "result": [0, 11, 17], "contribut": 0, "cite": [0, 14], "task": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11], "control": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 20, 22], "step": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 20, 21, 23], "size": [2, 3, 6, 9, 10, 11, 16, 20], "bbob": [2, 6], "neg": [2, 6, 9, 10, 17], "object": [2, 6, 9, 11, 17], "valu": [2, 3, 4, 6, 7, 8, 9, 10, 11, 15, 17, 20, 21, 23], "number": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 20, 21], "hyperparamet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 20], "one": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 15, 17, 20, 21, 23], "float": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 23], "state": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 20, 21, 23], "inform": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 17, 18, 20, 22, 23], "current": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 20, 21, 23], "point": [2, 4, 5, 6, 8, 9, 10, 23], "last": [2, 4, 5, 8, 11, 17, 20], "40": 2, "popul": [2, 6, 9], "delta": 2, "between": [2, 4, 8, 11, 14, 15, 21], "80": 2, "nois": [2, 3, 4, 5, 6, 7, 8, 9, 10, 23], "level": [2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 16, 17], "fairli": [2, 3, 6, 7, 9, 10, 15], "larg": [2, 3, 6, 7, 9, 11, 21], "depend": [2, 4, 5, 6, 8, 13, 14, 16, 17, 18], "target": [2, 6, 10, 14], "instanc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 20, 21, 23], "space": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 20, 21, 23], "id": [2, 6, 10, 11, 17, 20], "start": [2, 4, 5, 6, 7, 8, 14, 15, 23], "sigma": [2, 6], "well": [2, 5, 6, 7, 11, 20], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 18, 20, 21, 22, 23], "us": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23], "implement": [2, 3, 6, 11], "set": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 17, 18, 20, 21, 22, 23], "goal": [2, 3, 4, 6], "optim": [2, 3, 4, 6, 7, 9, 10, 14, 15, 23], "i": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "find": [2, 6, 7, 14, 15, 16], "global": [2, 6, 7, 10, 21], "minimum": [2, 5, 6], "befor": [2, 4, 6, 10, 14, 17, 21], "cutoff": [2, 3, 5, 6, 7, 8, 9, 10, 11, 18, 20], "so": [2, 3, 6, 7, 9, 10, 14, 17, 22, 23], "defin": [2, 3, 6, 14], "negativ": [2, 6], "provid": [2, 4, 7, 14, 17, 18, 21, 22, 23], "vari": 2, "suit": 2, "test": [2, 3, 5, 7, 8, 9, 10, 11, 14, 16, 20], "gener": [2, 5, 6, 9, 11, 14, 17, 21], "capabilit": 2, "method": [2, 5, 6, 7, 8, 10, 11, 14, 15, 17, 18, 21, 23], "due": [2, 6], "veri": [2, 5, 7, 8, 15, 22], "differ": [2, 4, 9, 11, 14, 15, 16, 20], "scale": [2, 4, 11], "thu": [2, 4, 9, 11, 20], "more": [2, 9, 11, 14, 17, 20, 21], "difficult": 2, "solv": [2, 7, 9, 15, 20], "ones": [2, 9], "dacbench": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 18, 20, 21, 22, 23], "wa": [2, 3, 5, 8, 9, 14], "construct": [2, 3, 5, 8, 9], "shala": 2, "et": [2, 3, 5, 8, 9, 15, 20], "al": [2, 3, 5, 8, 9, 15, 20], "paper": [2, 3, 5, 7, 8, 9], "adapt": [2, 4, 5, 6, 8, 11, 18], "http": [2, 3, 5, 6, 8, 9, 14, 15, 16, 21], "ml": 2, "informatik": 2, "uni": [2, 5, 8], "freiburg": 2, "de": [2, 5, 8], "wp": 2, "content": 2, "upload": 2, "20": [2, 5, 8, 17, 18], "ppsn": 2, "lto": [2, 7], "pdf": [2, 3, 5, 8, 9], "_": [2, 3, 4, 5, 7, 8, 9, 15], "2020": [2, 5, 8, 15], "class": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 18, 20, 23], "cma_benchmark": 2, "cmaesbenchmark": 2, "config_path": [2, 3, 4, 5, 6, 7, 8, 10, 11], "none": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 21, 23], "config": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 20, 22], "sourc": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 20, 21, 23], "base": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 20, 23], "abstractbenchmark": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17], "default": [2, 3, 4, 5, 7, 8, 9, 11, 14, 17, 18, 20, 21, 22], "relev": [2, 3, 4, 5, 7, 8], "get_benchmark": [2, 3, 4, 5, 7, 8], "seed": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 20, 21], "0": [2, 3, 4, 5, 7, 8, 9, 10, 11, 17, 20, 21, 22, 23], "get": [2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 17, 20, 22, 23], "from": [2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 17, 18, 20, 21, 22, 23], "paramet": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 21, 23], "int": [2, 3, 4, 5, 7, 8, 9, 10, 11, 17, 20, 21, 23], "environ": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 16, 17, 20, 22, 23], "return": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 21, 22, 23], "env": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 20, 22, 23], "cmae": 2, "type": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 21, 23], "cmaesenv": 2, "get_environ": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 18, 20, 22], "read_instance_set": [2, 3, 4, 5, 7, 8, 9, 10], "fals": [2, 3, 5, 6, 7, 8, 9, 10, 11, 17, 20, 21], "read": [2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 18], "path": [2, 3, 7, 10, 11, 17, 18], "list": [2, 3, 4, 7, 8, 10, 11, 16, 17, 20, 23], "cmaworld": 2, "g": [2, 4, 5, 9, 14, 15, 17, 18, 21, 23], "biedenkapp": [2, 3, 5, 8, 9, 12, 15], "n": [2, 3, 9, 16], "awad": 2, "": [2, 3, 5, 8, 9, 11, 12, 14, 15, 17, 20, 23], "adriaensen": [2, 12, 15], "m": [2, 5, 7, 8, 12], "lindauer": [2, 3, 5, 8, 12], "f": [2, 4, 5, 7, 8, 9, 12], "hutter": [2, 3, 5, 8, 12], "origin": [2, 3, 4, 5, 8, 9], "author": [2, 3, 4, 5, 8, 12], "gresa": 2, "cma_e": 2, "abstractenv": [2, 3, 4, 5, 7, 9, 11, 14, 17, 20], "close": [2, 3, 4, 5, 6, 7, 8, 9, 10, 17], "No": [2, 7, 9], "addit": [2, 6, 7, 9, 11, 14, 17, 20, 22, 23], "cleanup": [2, 7, 9], "necessari": [2, 6, 7, 9], "flag": [2, 6, 7, 9, 11, 20], "bool": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 21, 23], "get_default_reward": [2, 4, 8], "comput": [2, 7, 8, 14], "reward": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 18, 20, 22, 23], "get_default_st": [2, 4, 7, 8], "gather": [2, 4, 7], "descript": [2, 4, 7, 8, 11], "dict": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 21, 23], "render": [2, 3, 4, 5, 6, 7, 8, 10, 23], "mode": [2, 3, 5, 7, 8, 23], "human": [2, 3, 5, 7, 8], "str": [2, 3, 5, 7, 8, 10, 11, 17, 21, 23], "execut": [2, 4, 5, 6, 7, 8, 9, 11, 14, 15, 20, 23], "reset": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 17, 20, 23], "option": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 15, 16, 17, 20, 21, 22], "np": [2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 17, 20, 23], "arrai": [2, 3, 4, 5, 7, 8, 9, 10, 11, 14, 17, 20, 23], "action": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 20, 21, 23], "done": [2, 8, 23], "info": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 20, 23], "select": [3, 6, 11, 16, 20, 21], "heurist": [3, 11], "planner": [3, 11, 16], "categor": [3, 6], "averag": [3, 21], "max": [3, 4], "min": [3, 4], "open": [3, 14], "entri": [3, 4, 9, 10, 17], "varianc": [3, 7], "each": [3, 4, 5, 7, 8, 9, 10, 14, 15, 16, 17, 20, 21, 23], "either": [3, 6, 7, 11, 14, 20, 23], "specif": [3, 4, 8, 10, 11, 14, 20], "desigd": 3, "easi": [3, 4, 7, 9, 14], "ground": [3, 9, 11], "truth": [3, 9, 11], "common": [3, 18], "plan": [3, 16], "competit": [3, 11], "an": [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 20, 22, 23], "interfac": [3, 9, 11, 17, 20, 23], "fast": [3, 16], "downward": [3, 16], "ai": 3, "its": [3, 4, 5, 6, 7, 9, 14, 16], "In": [3, 4, 5, 8, 14, 15, 16, 17, 18, 20, 23], "until": [3, 5, 7, 8, 9, 10], "finish": [3, 6, 11, 20], "termin": [3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 23], "via": [3, 14], "two": [3, 9, 10, 17], "case": [3, 14, 18, 21], "four": 3, "heuristicc": 3, "reduc": [3, 17], "runtim": [3, 15], "everi": [3, 4, 14], "taken": [3, 9, 10], "incur": 3, "1": [3, 4, 5, 8, 9, 10, 14, 17, 18, 20, 21, 22], "out": [3, 6, 9, 11, 20], "our": [3, 7, 9, 11, 14, 15, 16, 17, 18, 20], "real": [3, 4, 9, 11], "world": [3, 4], "like": [3, 6, 10, 14, 15, 17, 18, 21, 22], "fastest": 3, "run": [3, 4, 5, 6, 8, 9, 11, 13, 14, 16, 17, 20, 21, 22], "ha": [3, 6, 7, 14, 17, 21], "been": [3, 17], "shown": [3, 20, 21, 22], "suitabl": 3, "though": [3, 20], "high": [3, 10, 15], "most": [3, 5, 14, 22], "should": [3, 6, 7, 14, 16, 17, 23], "abl": [3, 14], "polici": [3, 4, 14, 23], "compar": 3, "time": [3, 6, 9, 10, 11, 17, 20, 21, 23], "frame": [3, 21], "speck": 3, "arxiv": [3, 9], "org": [3, 9, 12, 15, 21], "2006": 3, "08246": 3, "icap": 3, "2021": [3, 12], "fast_downward_benchmark": 3, "fastdownwardbenchmark": 3, "publish": [3, 12], "fd": 3, "fastdownwardenv": 3, "lubyenv": [3, 5], "david": 3, "andr\u00e9": [3, 5, 8], "frank": 3, "robert": 3, "mattm\u00fcller": 3, "und": 3, "mariu": 3, "fast_downward": 3, "solver": 3, "confirm": [3, 4, 5, 8, 9], "kill_connect": 3, "kill": 3, "connect": [3, 6], "recv_msg": 3, "reciev": 3, "whole": 3, "messag": 3, "prepend": 3, "total": [3, 8], "comment": 3, "see": [3, 9, 14, 17, 21], "byte": 3, "recval": 3, "given": [3, 5, 7, 8, 9, 23], "we": [3, 7, 9, 10, 11, 14, 15, 16, 18, 22, 23], "know": [3, 10, 11], "want": [3, 9, 14, 15, 16, 17, 18, 20, 21, 22], "can": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23], "amount": [3, 5], "expect": [3, 21], "data": [3, 5, 8, 11, 17, 20, 21, 23], "requir": [3, 8, 14], "gym": [3, 6, 9, 11, 17], "after": [3, 6, 7, 9, 21], "meta": [3, 4, 5, 8, 10], "send_msg": 3, "msg": 3, "send": 3, "stackoverflow": 3, "com": [3, 16], "17668009": 3, "union": [3, 17], "appli": [3, 5, 21], "truncat": [3, 4, 5, 6, 7, 8, 9, 10, 11, 20, 23], "statetyp": 3, "enum": [3, 7], "aroxim": 4, "normal": [4, 20], "distanc": [4, 8, 23], "actual": [4, 7], "user": [4, 6, 8, 9, 14, 20], "specifi": [4, 8, 9, 14, 17, 20, 21], "remain": [4, 6, 8, 10, 17, 20], "budget": [4, 6, 8, 10], "deriv": 4, "instanti": [4, 9, 11, 20], "linear": 4, "correl": 4, "artif": 4, "approxim": [4, 8, 10, 11, 20, 23], "onli": [4, 9, 14, 17, 22, 23], "Its": 4, "simul": 4, "multipl": [4, 8, 10, 11, 14, 20, 21], "behav": 4, "possibl": [4, 5, 8, 14, 15, 17, 18, 20], "dimens": [4, 8, 11, 18, 20, 21], "tri": 4, "true": [4, 8, 9, 10, 17, 20, 21, 23], "predict": [4, 5, 7, 8], "There": [4, 11], "ar": [4, 6, 8, 9, 10, 11, 14, 17, 18, 22, 23], "wai": [4, 14, 17, 18, 22, 23], "accumul": 4, "built": [4, 5, 7, 8, 9, 11, 16, 21], "nmaliz": 4, "sum": 4, "across": [4, 15], "all": [4, 7, 8, 16, 17, 18, 20, 21, 22, 23], "hard": 4, "problem": [4, 9, 11, 15], "fulli": 4, "cheap": [4, 5, 8, 9, 10, 11], "aim": [4, 9, 15], "flexibl": [4, 7, 9, 11, 20], "difficulti": [4, 6], "up": [4, 6, 7, 15, 21], "slowli": 4, "transit": 4, "geometric_benchmark": 4, "geometricbenchmark": 4, "create_correlation_t": 4, "creat": [4, 7, 9, 11, 14, 16, 17, 20, 21], "tabl": 4, "summari": 4, "geometricenv": 4, "file": [4, 5, 8, 9, 11, 12, 14, 17, 22], "nest": [4, 17], "intanc": 4, "respect": [4, 14], "set_action_descript": 4, "add": [4, 6, 11, 14, 17, 20, 21, 23], "about": [4, 11, 17, 22, 23], "coordin": 4, "set_action_valu": [4, 8], "updat": [4, 6, 8, 10, 11, 16, 17, 20, 21, 22], "defaultdict": 4, "arg": [4, 11, 21, 23], "rasmu": 4, "von": 4, "glahn": 4, "trace": [4, 8], "curv": [4, 8], "orthogon": [4, 6], "other": [4, 9, 11, 14, 16, 17, 18], "product": 4, "approach": [4, 20], "t": [4, 5, 8, 9, 11, 12, 14, 16, 17, 20], "x": [4, 8, 9, 21], "y": [4, 8, 21], "z": 4, "over": [4, 8, 15, 21, 23], "timestep": [4, 5, 8], "calcul": [4, 9], "euclidean": 4, "vector": 4, "posit": [4, 9, 10, 17], "self": [4, 9, 11, 17], "ignor": 4, "param": 4, "numpi": [4, 5, 8, 9, 14, 23], "get_optimal_polici": 4, "vector_act": 4, "multidim": 4, "els": [4, 5, 22], "onedimension": 4, "hold": 4, "absolute_path": 4, "multiplot": 4, "render_3d_dimens": 4, "2": [4, 8, 9, 10, 14, 16, 17, 21, 22], "3d": 4, "lning": 5, "sequenc": [5, 11], "variat": 5, "correct": [5, 6, 7, 14], "element": [5, 17], "integ": [5, 8, 9], "three": [5, 17], "iter": [5, 7, 9, 17], "seri": 5, "5": [5, 8, 14, 18], "instead": [5, 14, 16, 20, 23], "repetit": 5, "fo": 5, "top": [5, 7, 8, 9, 14, 16], "pure": 5, "next": [5, 14], "If": [5, 7, 8, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22], "alter": [5, 21, 22, 23], "quit": [5, 14, 20, 21], "challeng": [5, 6, 11, 15], "nonetheless": 5, "basic": 5, "form": 5, "serv": [5, 10, 18], "valid": [5, 7, 9, 17], "prowess": 5, "correctli": 5, "foundat": [5, 8], "new": [5, 7, 8, 9, 11, 14, 15, 20, 21, 22, 23], "framework": [5, 8], "www": [5, 8, 15], "tnt": [5, 8], "hannov": [5, 8], "1432": [5, 8], "ecai": [5, 8, 15], "luby_benchmark": 5, "lubybenchmark": 5, "l": [5, 9], "8": [5, 9], "fuzzi": 5, "lenght": 5, "16": [5, 17], "32": 5, "set_cutoff": 5, "maximum": [5, 9, 14], "set_history_length": 5, "length": [5, 17, 18], "histori": 5, "h": [5, 8], "bozkurt": [5, 8], "eimer": [5, 8, 12], "furkan": [5, 8], "luby_gen": 5, "compon": [6, 11, 20], "11": 6, "enabl": [6, 14], "both": [6, 7, 10, 11, 14, 22], "cool": 6, "chang": [6, 7, 9, 11, 14, 15, 18, 20, 21, 23], "sequenti": 6, "activ": [6, 16], "elit": 6, "sampl": [6, 8, 10, 14, 17, 18, 20, 23], "converg": 6, "threshold": 6, "scheme": [6, 11, 20], "mirror": 6, "sampler": 6, "weight": 6, "local": [6, 14], "restart": 6, "bound": 6, "version": [6, 11, 13, 16, 20], "anoth": 6, "layer": 6, "mani": [6, 9, 14, 17], "It": [6, 9, 10, 14, 21], "advanc": 6, "develop": 6, "modcma_benchmark": 6, "modcmabenchmark": 6, "step_siz": 6, "make": [6, 10, 11, 13, 14, 17, 20, 22, 23], "modcmaenv": 6, "abstractmadacenv": [6, 8, 10, 11, 20], "code": [6, 14, 16, 18, 22], "clean": 6, "critic": 6, "window": 6, "databas": 6, "metainfo": [6, 11, 20, 23], "take": [6, 9, 10, 11, 14, 15, 16, 17, 20, 21], "rate": [7, 10, 11, 15, 20], "differenti": 7, "loss": [7, 15], "uncertainti": 7, "train": [7, 9, 11, 14, 20, 23], "align": 7, "crash": 7, "dataset": [7, 8], "network": [7, 11], "architectur": 7, "pytorch": [7, 14], "allow": [7, 20], "At": [7, 9, 10, 14], "epoch": 7, "success": 7, "measur": [7, 10, 21], "decreas": [7, 15, 18], "principl": 7, "kind": [7, 11], "classif": [7, 15], "compat": 7, "includ": [7, 11, 14, 16, 17, 23], "underli": 7, "howev": [7, 9, 14, 20], "recommend": [7, 11, 14, 15, 16, 21], "small": [7, 10, 14], "build": [7, 13, 14, 16], "harder": [7, 9, 11], "sgd_benchmark": 7, "sgdbenchmark": 7, "instance_set_path": 7, "sgdenv": [7, 10], "intenum": 7, "enumer": [7, 21], "__call__": 7, "exist": [7, 9, 13, 14, 15, 20, 23], "member": 7, "when": [7, 14], "match": [7, 21], "color": 7, "3": [7, 8, 14, 16, 21], "api": 7, "name": [7, 9, 11, 17, 20, 21, 23], "red": 7, "green": 7, "blue": 7, "string": [7, 9, 11, 21], "white": 7, "comma": 7, "delimit": 7, "map": [7, 21, 23], "pair": [7, 17], "modul": [7, 17, 23], "being": [7, 9], "attempt": 7, "made": [7, 14], "fail": 7, "picklabl": 7, "qualnam": 7, "locat": 7, "found": [7, 13, 14, 16], "scope": [7, 11], "unpickl": 7, "some": [7, 8, 14, 21], "circumst": 7, "mix": 7, "first": [7, 9, 10, 15, 16, 20], "adam": 7, "seed_action_spac": [7, 11, 20], "rng": [7, 9, 11, 20], "val_model": 7, "samuel": 7, "mueller": 7, "phd": 7, "student": 7, "group": 7, "also": [7, 9, 10, 11, 14, 15, 16, 17, 18, 20], "backpack": 7, "ran": 7, "similar": [7, 20], "memori": 7, "leak": 7, "he": 7, "call": [7, 17, 23], "custom": [7, 14, 23], "recurs": [7, 16, 17], "memory_cleanup": 7, "import": [7, 11, 14, 17, 18, 20, 22, 23], "def": [7, 13, 22], "recursive_backpack_memory_cleanup": 7, "torch": 7, "nn": 7, "gradient": [7, 10, 11, 20], "suffic": 7, "todo": 7, "fix": [8, 14, 17], "upper": 8, "limit": 8, "inflect": 8, "slope": [8, 18], "consist": [8, 14], "per": [8, 11, 14, 20, 21, 23], "notebook": 8, "exampl": [8, 11, 13, 14, 15, 16, 17, 21, 22], "repositori": [8, 11, 13, 16], "simpli": 8, "discret": [8, 17, 23], "mean": [8, 11, 15, 21, 22, 23], "usual": [8, 17, 20, 21], "best": [8, 9, 14, 15], "multipli": [8, 18], "shape": 8, "easili": 8, "therefor": [8, 14, 18, 21, 22], "good": [8, 9, 10, 14], "ani": [8, 14, 17, 18, 23], "gain": 8, "insight": [8, 11], "which": [8, 14, 20, 21], "fine": 8, "distribut": [8, 23], "sigmoid_benchmark": 8, "sigmoidbenchmark": [8, 11, 14, 18, 20, 22], "sigmoidenv": 8, "continuoussigmoidenv": 8, "continu": [8, 9], "axi": [8, 21], "note": [8, 20], "here": [8, 13, 14, 16], "singl": [8, 11, 20], "continuousstatesigmoidenv": 8, "represent": [8, 9, 14], "flip": 9, "rl": [9, 11, 16, 23], "leadingon": [9, 11], "solut": [9, 11], "highli": [9, 11], "consid": [9, 14], "avail": [9, 14, 23], "artifici": [9, 10, 11, 12, 16, 20], "choos": 9, "bit": 9, "while": [9, 18, 22], "ea": [9, 11, 20], "mai": [9, 18], "analyz": 9, "behavior": [9, 23], "inspir": 9, "2202": 9, "03259": 9, "gecco": 9, "2022": [9, 15], "theory_benchmark": 9, "theorybenchmark": 9, "variou": 9, "lbd": 9, "ga": 9, "create_observation_space_from_descript": 9, "obs_descript": 9, "env_class": 9, "rlsenvdiscret": 9, "box": [9, 17, 23], "variabl": [9, 14, 17], "k": 9, "k_": 9, "test_env": 9, "whether": [9, 10], "enviro": 9, "episod": [9, 11, 14, 16, 17, 18, 20, 21, 23], "rang": [9, 11, 14], "stop": 9, "immedi": [9, 21], "py": [9, 16, 21], "detail": [9, 11, 14, 17, 21], "otherwis": 9, "clip": 9, "nearest": 9, "look": [9, 10, 14, 15, 21, 22], "directori": [9, 16, 17], "doesn": [9, 11, 14], "instance_set": 9, "binaryproblem": 9, "pcg64": 9, "0x7f435edf1c40": 9, "abstract": [9, 11, 17, 20], "individu": [9, 22], "binari": 9, "combin": [9, 15, 17, 21], "xprime": 9, "locs_xprim": 9, "crossov": 9, "1d": 9, "boolean": 9, "locs_x": 9, "where": [9, 14, 15], "keep": [9, 14], "p": 9, "n_child": 9, "include_xprim": 9, "count_different_inds_onli": 9, "0x7f435d146340": 9, "oper": 9, "probabl": 9, "child": 9, "inculd": 9, "count": [9, 11, 20], "random": [9, 11, 14, 16, 20, 23], "eval": 9, "evalu": 9, "fit": 9, "loc": 9, "indic": [9, 17], "get_fitness_after_crossov": 9, "get_fitness_after_flip": 9, "get_optim": 9, "optimum": [9, 10, 15], "initialise_with_fixed_number_of_bit": 9, "0x7f435d1458c0": 9, "init": [9, 11, 16], "is_optim": 9, "mutat": 9, "0x7f435d146260": 9, "draw": 9, "binomi": 9, "children": 9, "exactli": [9, 14], "mutate_rl": 9, "0x7f435d145fc0": 9, "0x7f435d146420": 9, "initobj": 9, "maximis": 9, "lead": [9, 17, 20], "consecut": 9, "rlsenv": 9, "assumpt": 9, "tune": 9, "r": 9, "get_obs_domain_from_nam": 9, "lower": 9, "upperbound": 9, "inf": 9, "get_stat": [9, 23], "choic": [9, 13], "discretis": 9, "momentum": 10, "simpl": [10, 14, 15, 17, 22, 23], "regret": 10, "polynomi": 10, "abil": 10, "As": [10, 15, 17, 20], "By": [10, 17], "computation": 10, "tackl": 10, "full": [10, 16], "handl": [10, 17], "same": [10, 20, 22], "toysgd_benchmark": 10, "toysgdbenchmark": 10, "toysgdenv": 10, "log_learning_r": 10, "log_momentum": 10, "10": [10, 16, 21], "remaining_budget": [10, 22], "learning_r": 10, "follow": [10, 12, 13, 14, 20], "famili": 10, "order": [10, 14, 15, 16, 20, 21, 23], "low": 10, "coeffici": 10, "40501053": 10, "59899755": 10, "43337392": 10, "build_objective_funct": 10, "get_initial_posit": 10, "initi": 10, "kwarg": [10, 17, 21], "progress": [10, 11, 14, 20, 23], "tupl": [10, 17], "scalar": 10, "create_polynomial_instance_set": 10, "out_fnam": 10, "n_sampl": 10, "100": 10, "sample_coeffici": 10, "categori": 11, "domain": 11, "often": [11, 21], "introduct": 11, "verifi": 11, "thei": [11, 14, 21, 23], "descent": [11, 20], "sever": [11, 14, 20], "onc": [11, 14, 17, 20, 21], "beyond": 11, "smaller": 11, "lot": [11, 15], "less": [11, 20], "interpret": 11, "larger": [11, 14], "These": 11, "oftentim": 11, "noisier": 11, "debug": 11, "costli": 11, "present": 11, "adpat": 11, "back": [11, 20], "dl": 11, "neural": 11, "gymnasium": 11, "reinforc": [11, 15], "That": [11, 14, 15, 18, 22], "you": [11, 12, 13, 14, 16, 17, 18, 20, 21], "need": [11, 14, 15, 17, 18, 20, 21, 22], "interact": 11, "github": [11, 14, 16, 21], "To": [11, 13, 14, 16, 17, 18, 20, 21, 23], "bench": [11, 18, 20, 22], "benchmark_env": 11, "abstract_benchmark": 11, "templat": [11, 13, 20], "__eq__": 11, "check": [11, 17], "equal": [11, 17], "classmethod": 11, "class_to_str": 11, "dejson_wrapp": 11, "wrapper_list": 11, "dictify_json": 11, "dict_list": 11, "json": [11, 17, 18], "structur": [11, 14, 17], "from_json": 11, "json_config": 11, "get_config": 11, "jsonify_dict_spac": 11, "dict_spac": 11, "jsonify_wrapp": 11, "write": [11, 13, 14, 17], "list_to_spac": 11, "space_list": 11, "ifi": 11, "load_config": 11, "objdict": 11, "process_configspac": 11, "configuration_spac": 11, "c": 11, "directli": [11, 18], "ever": 11, "replac": [11, 21], "read_config_fil": [11, 18], "register_wrapp": 11, "wrap_func": 11, "regist": [11, 18, 20], "save_config": [11, 18], "serialize_config": 11, "set_action_spac": 11, "argument": [11, 18, 21, 22, 23], "pass": [11, 18], "set_observation_spac": 11, "data_typ": 11, "observation_spac": [11, 14], "set_se": 11, "space_to_list": 11, "pars": 11, "to_json": 11, "__delattr__": 11, "delet": 11, "attribut": [11, 18, 21, 23], "__getattr__": 11, "__ne__": 11, "inequ": 11, "__setattr__": [11, 23], "copi": 11, "abstract_env": [11, 14, 20], "get_inst_id": [11, 20], "get_inst": [11, 20], "get_instance_set": [11, 20], "reset_": [11, 20], "instance_id": [11, 20], "pre": [11, 14, 16, 20], "Will": [11, 20], "round": [11, 20], "robin": [11, 20], "set_inst_id": [11, 20], "inst_id": [11, 20], "index": [11, 20], "set_inst": [11, 20], "set_instance_set": [11, 20], "inst_set": [11, 20], "step_": [11, 20], "end": [11, 15, 17, 20], "use_next_inst": [11, 20], "accord": [11, 20], "chosen": [11, 20], "progess": [11, 20], "potent": [11, 20], "switch": [11, 14, 20], "use_test_set": [11, 20], "use_training_set": [11, 20], "properti": [11, 17, 20, 21], "agent_select": [11, 20], "multi_agent_reset": [11, 20], "don": [11, 14, 16, 17, 20], "multi_agent_step": [11, 20], "num_ag": [11, 20], "register_ag": [11, 20], "agent_id": [11, 20], "remove_ag": [11, 20], "remov": [11, 17, 20], "your": [12, 13, 14, 17, 18], "research": 12, "pleas": [12, 14, 16, 18, 21], "u": [12, 14], "bibtex": 12, "inproceed": 12, "ijcai21": 12, "reimer": 12, "titl": [12, 21], "benchmark": [12, 13, 16, 17, 20, 22], "librari": [12, 20, 23], "booktitl": 12, "proceed": 12, "thirtieth": 12, "intern": [12, 17, 22, 23], "joint": 12, "confer": 12, "intellig": 12, "ijcai": 12, "21": [12, 17], "year": 12, "month": 12, "aug": 12, "container": 13, "singular": 13, "isol": 13, "reproduc": 13, "imag": [13, 15], "cd": [13, 16], "singularity_recip": 13, "sudo": 13, "For": [13, 14, 17, 20, 21], "own": 13, "recip": 13, "refer": [13, 21], "recipe_templ": 13, "collabor": [14, 20], "project": 14, "sinc": 14, "concept": 14, "have": [14, 16, 18, 20], "had": 14, "valueabl": 14, "appreci": 14, "everyon": 14, "who": 14, "bigger": 14, "better": 14, "commun": 14, "document": [14, 16, 17, 20], "guid": [14, 16], "help": [14, 17], "improv": [14, 18, 23], "extend": 14, "interest": [14, 17], "main": 14, "bug": 14, "issu": 14, "give": 14, "idea": 14, "someth": 14, "miss": 14, "work": 14, "especi": [14, 20, 21], "within": [14, 16], "few": 14, "minut": 14, "place": 14, "featur": 14, "extens": 14, "hesit": 14, "integr": 14, "ask": 14, "describ": 14, "pr": [14, 22], "clearli": 14, "review": 14, "much": 14, "faster": 14, "avoid": 14, "misunderstand": 14, "ideal": 14, "coverag": [14, 16], "submit": 14, "accident": 14, "introduc": 14, "error": 14, "pytest": 14, "dir": 14, "cov": 14, "report": [14, 16], "html": [14, 21], "dev": [14, 16], "extra": 14, "flake8": 14, "format": [14, 17, 21], "tool": [14, 15], "black": 14, "setup": 14, "commit": 14, "hook": 14, "ensur": 14, "qualiti": 14, "doc": [14, 16], "them": [14, 16, 17, 18], "sphinx": 14, "re": 14, "familiar": 14, "readthedoc": 14, "io": 14, "en": 14, "stabl": 14, "intro": 14, "alwai": 14, "contact": 14, "mail": 14, "assist": 14, "goe": [14, 22], "subclass": 14, "addition": 14, "model": 14, "forget": 14, "overrid": [14, 18], "least": 14, "mandatori": 14, "sure": [14, 17, 18], "track": [14, 17, 23], "The": [14, 16, 17, 18, 20, 21, 22, 23], "enourag": 14, "scenario": 14, "usabl": [14, 23], "again": 14, "might": 14, "cours": 14, "standard": [14, 22, 23], "deal": 14, "even": [14, 20], "would": 14, "furthermor": [14, 15], "than": [14, 15], "label": [14, 21], "wide_instance_dist": 14, "east_inst": 14, "4": [14, 21], "access": 14, "show": [14, 21], "special": [14, 17], "dictionari": 14, "flatten": [14, 23], "properli": 14, "everyth": 14, "grate": 14, "share": [14, 18], "briefli": 14, "why": 14, "page": 14, "technic": [14, 20], "thing": 14, "pai": 14, "attent": 14, "feel": 14, "free": 14, "thank": 14, "corr": 15, "paradigm": 15, "becaus": 15, "could": [15, 20, 21, 22], "travers": 15, "landscap": 15, "quickli": 15, "slow": 15, "down": 15, "overshoot": 15, "gradual": 15, "account": 15, "factor": 15, "schedul": 15, "mnist": 15, "imagenet": 15, "classic": 15, "still": 15, "rel": 15, "stai": 15, "date": 15, "literatur": 15, "automl": [15, 16], "autom": 15, "design": [15, 23], "altern": [16, 17], "clone": 16, "git": 16, "submodul": 16, "virtual": 16, "conda": 16, "python": 16, "6": 16, "now": [16, 17], "pip": 16, "dependeci": 16, "separ": [16, 21], "modea": 16, "cmake": 16, "folder": 16, "itself": [16, 18, 22], "advantag": 16, "static": 16, "baselin": 16, "1000": 16, "download": 16, "potenti": 17, "metric": 17, "involv": 17, "analysi": 17, "store": [17, 21], "logger": [17, 23], "pathlib": 17, "experiment_nam": 17, "output_path": 17, "performancetrackingwrapp": [17, 23], "performance_logg": 17, "add_modul": 17, "add_env": 17, "jsonl": 17, "ad": [17, 23], "panda": 17, "datafram": [17, 21], "load_log": 17, "log2datafram": [17, 21], "performancytrackingwrapp": 17, "df": 17, "abstractlogg": 17, "step_write_frequ": 17, "episode_write_frequ": 17, "row": [17, 21], "correspond": [17, 18], "additional_info": 17, "written": 17, "is_of_valid_typ": 17, "kei": [17, 20], "must": 17, "serializ": 17, "those": [17, 20, 21], "support": [17, 20, 23], "log_dict": 17, "log_spac": 17, "space_info": 17, "multidiscret": [17, 23], "assum": 17, "ndarrai": 17, "column": [17, 21], "next_episod": 17, "next_step": 17, "dump": 17, "set_env": 17, "infer": [17, 23], "automat": [17, 21], "buffer": 17, "invok": 17, "manual": 17, "dure": 17, "manag": 17, "creation": 17, "modulelogg": 17, "module_logg": 17, "my_wrapp": 17, "care": 17, "sublogg": 17, "__del__": 17, "add_ag": 17, "abstractdacbenchag": 17, "add_benchmark": 17, "sub": 17, "reset_episod": 17, "set_additional_info": 17, "toplevel": 17, "get_logfil": 17, "logfil": 17, "Be": 17, "awar": [17, 21], "ambiti": 17, "identifi": 17, "flatten_log_entri": 17, "log_entri": 17, "transform": 17, "some_valu": 17, "34": 17, "45": 17, "28": 17, "12": 17, "53": 17, "30": [17, 21], "instance_mapp": 17, "helper": [17, 21], "list_to_tupl": 17, "list_": 17, "log_fil": 17, "example_log_v": 17, "val1": 17, "val2": 17, "valn": 17, "time1": 17, "time2": 17, "timen": 17, "wide": [17, 21], "drop_column": 17, "convert": [17, 21], "load_datafram": 17, "produc": 17, "name_1": 17, "name_2": 17, "name_n": 17, "nan": 17, "drop": 17, "reshap": 17, "long": [17, 23], "mostli": 17, "seed_mapp": 17, "split": 17, "predic": 17, "callabl": 17, "ture": 17, "encourag": 18, "recogn": 18, "perfect": 18, "upon": 18, "modif": 18, "modified_benchmark": [18, 22], "wth": 18, "increas": 18, "slope_multipli": 18, "complex": 18, "do": [18, 22], "along": 18, "beforehand": 18, "xue": 20, "promis": 20, "further": 20, "innov": 20, "direct": 20, "multi_ag": 20, "applic": 20, "sens": 20, "randomli": 20, "adversari": 20, "effect": 20, "configspac": 20, "staticag": 20, "agent_zero": 20, "action_spac": 20, "agent_on": 20, "loop": 20, "slightli": 20, "act": 20, "consult": 20, "pettingzoo": 20, "seaborn": 21, "add_multi_level_tick": 21, "grid": 21, "plot_index": 21, "x_column": 21, "x_label_column": 21, "facedgrid": 21, "global_step": 21, "tick": 21, "9": 21, "14": 21, "19": 21, "24": 21, "29": 21, "sn": 21, "facesgrid": 21, "onto": 21, "pd": 21, "join": 21, "generate_global_step": 21, "hierarch": 21, "plot_funct": 21, "x_label": 21, "y_label": 21, "facetgrid": 21, "overwrit": 21, "pretti": 21, "space_sep_upp": 21, "readjust": 21, "afterward": 21, "col": 21, "catplot": 21, "keyword": 21, "plot_act": 21, "show_global_step": 21, "interv": [21, 23], "karg": 21, "line": 21, "becom": 21, "messi": 21, "try": 21, "subset": 21, "perform": [21, 23], "stddev": 21, "hue": 21, "pydata": 21, "relplot": 21, "action_plot": 21, "plot_episode_tim": 21, "time_plot": 21, "plot_perform": 21, "performance_plot": 21, "plot_performance_per_inst": 21, "bar": 21, "plot_spac": 21, "space_column_nam": 21, "state_plot": 21, "plot_stat": 21, "plot_step_tim": 21, "column_nam": 21, "underscor": 21, "head": 21, "come": 22, "what": 22, "new_reward": 22, "c_step": 22, "reward_funct": 22, "new_ob": 22, "state_method": 22, "too": 22, "reus": 22, "anyon": 22, "plu": 22, "advis": 22, "comfort": 23, "without": 23, "record": 23, "wrap": 23, "wrapped_env": 23, "actionfrequencywrapp": 23, "action_interv": 23, "frequenc": 23, "len": 23, "__getattribute__": 23, "get_act": 23, "sort": 23, "render_action_track": 23, "rbg": 23, "episodetimewrapp": 23, "time_interv": 23, "spent": 23, "get_tim": 23, "render_episode_tim": 23, "render_step_tim": 23, "instancesamplingwrapp": 23, "sampling_funct": 23, "reset_interv": 23, "fit_dist": 23, "multidiscreteactionwrapp": 23, "cast": 23, "observationwrapp": 23, "covert": 23, "conveni": 23, "state_dict": 23, "performance_interv": 23, "track_instance_perform": 23, "get_perform": 23, "arri": 23, "render_instance_perform": 23, "render_perform": 23, "policyprogresswrapp": 23, "compute_optim": 23, "toward": 23, "obtain": 23, "render_policy_progress": 23, "rewardnoisewrapp": 23, "noise_funct": 23, "noise_dist": 23, "standard_norm": 23, "dist_arg": 23, "signal": 23, "add_nois": 23, "dist": 23, "statetrackingwrapp": 23, "state_interv": 23, "render_state_track": 23}, "objects": {"dacbench": [[11, 0, 0, "-", "abstract_benchmark"], [20, 0, 0, "-", "abstract_env"], [17, 0, 0, "-", "logger"], [21, 0, 0, "-", "plotting"], [23, 0, 0, "-", "wrappers"]], "dacbench.abstract_benchmark": [[11, 1, 1, "", "AbstractBenchmark"], [11, 1, 1, "", "objdict"]], "dacbench.abstract_benchmark.AbstractBenchmark": [[11, 2, 1, "", "__eq__"], [11, 2, 1, "", "class_to_str"], [11, 2, 1, "", "dejson_wrappers"], [11, 2, 1, "", "dictify_json"], [11, 2, 1, "", "from_json"], [11, 2, 1, "", "get_config"], [11, 2, 1, "", "get_environment"], [11, 2, 1, "", "jsonify_dict_space"], [11, 2, 1, "", "jsonify_wrappers"], [11, 2, 1, "", "list_to_space"], [11, 2, 1, "", "load_config"], [11, 2, 1, "", "process_configspace"], [11, 2, 1, "", "read_config_file"], [11, 2, 1, "", "register_wrapper"], [11, 2, 1, "", "save_config"], [11, 2, 1, "", "serialize_config"], [11, 2, 1, "", "set_action_space"], [11, 2, 1, "", "set_observation_space"], [11, 2, 1, "", "set_seed"], [11, 2, 1, "", "space_to_list"], [11, 2, 1, "", "to_json"]], "dacbench.abstract_benchmark.objdict": [[11, 2, 1, "", "__delattr__"], [11, 2, 1, "", "__eq__"], [11, 2, 1, "", "__getattr__"], [11, 2, 1, "", "__ne__"], [11, 2, 1, "", "__setattr__"], [11, 2, 1, "", "copy"]], "dacbench.abstract_env": [[20, 1, 1, "", "AbstractEnv"], [20, 1, 1, "", "AbstractMADACEnv"]], "dacbench.abstract_env.AbstractEnv": [[20, 2, 1, "", "get_inst_id"], [20, 2, 1, "", "get_instance"], [20, 2, 1, "", "get_instance_set"], [20, 2, 1, "", "reset"], [20, 2, 1, "", "reset_"], [20, 2, 1, "", "seed"], [20, 2, 1, "", "set_inst_id"], [20, 2, 1, "", "set_instance"], [20, 2, 1, "", "set_instance_set"], [20, 2, 1, "", "step"], [20, 2, 1, "", "step_"], [20, 2, 1, "", "use_next_instance"], [20, 2, 1, "", "use_test_set"], [20, 2, 1, "", "use_training_set"]], "dacbench.abstract_env.AbstractMADACEnv": [[20, 3, 1, "", "agent_selection"], [20, 3, 1, "", "infos"], [20, 2, 1, "", "last"], [20, 2, 1, "", "multi_agent_reset"], [20, 2, 1, "", "multi_agent_step"], [20, 3, 1, "", "num_agents"], [20, 2, 1, "", "register_agent"], [20, 2, 1, "", "remove_agent"], [20, 3, 1, "", "rewards"], [20, 3, 1, "", "terminations"], [20, 3, 1, "", "truncations"]], "dacbench.benchmarks": [[2, 0, 0, "-", "cma_benchmark"], [3, 0, 0, "-", "fast_downward_benchmark"], [4, 0, 0, "-", "geometric_benchmark"], [5, 0, 0, "-", "luby_benchmark"], [6, 0, 0, "-", "modcma_benchmark"], [7, 0, 0, "-", "sgd_benchmark"], [8, 0, 0, "-", "sigmoid_benchmark"], [9, 0, 0, "-", "theory_benchmark"], [10, 0, 0, "-", "toysgd_benchmark"]], "dacbench.benchmarks.cma_benchmark": [[2, 1, 1, "", "CMAESBenchmark"]], "dacbench.benchmarks.cma_benchmark.CMAESBenchmark": [[2, 2, 1, "", "get_benchmark"], [2, 2, 1, "", "get_environment"], [2, 2, 1, "", "read_instance_set"]], "dacbench.benchmarks.fast_downward_benchmark": [[3, 1, 1, "", "FastDownwardBenchmark"]], "dacbench.benchmarks.fast_downward_benchmark.FastDownwardBenchmark": [[3, 2, 1, "", "get_benchmark"], [3, 2, 1, "", "get_environment"], [3, 2, 1, "", "read_instance_set"]], "dacbench.benchmarks.geometric_benchmark": [[4, 1, 1, "", "GeometricBenchmark"]], "dacbench.benchmarks.geometric_benchmark.GeometricBenchmark": [[4, 2, 1, "", "create_correlation_table"], [4, 2, 1, "", "get_benchmark"], [4, 2, 1, "", "get_environment"], [4, 2, 1, "", "read_instance_set"], [4, 2, 1, "", "set_action_description"], [4, 2, 1, "", "set_action_values"]], "dacbench.benchmarks.luby_benchmark": [[5, 1, 1, "", "LubyBenchmark"]], "dacbench.benchmarks.luby_benchmark.LubyBenchmark": [[5, 2, 1, "", "get_benchmark"], [5, 2, 1, "", "get_environment"], [5, 2, 1, "", "read_instance_set"], [5, 2, 1, "", "set_cutoff"], [5, 2, 1, "", "set_history_length"]], "dacbench.benchmarks.modcma_benchmark": [[6, 1, 1, "", "ModCMABenchmark"]], "dacbench.benchmarks.modcma_benchmark.ModCMABenchmark": [[6, 2, 1, "", "get_environment"]], "dacbench.benchmarks.sgd_benchmark": [[7, 1, 1, "", "SGDBenchmark"]], "dacbench.benchmarks.sgd_benchmark.SGDBenchmark": [[7, 2, 1, "", "get_benchmark"], [7, 2, 1, "", "get_environment"], [7, 2, 1, "", "read_instance_set"]], "dacbench.benchmarks.sigmoid_benchmark": [[8, 1, 1, "", "SigmoidBenchmark"]], "dacbench.benchmarks.sigmoid_benchmark.SigmoidBenchmark": [[8, 2, 1, "", "get_benchmark"], [8, 2, 1, "", "get_environment"], [8, 2, 1, "", "read_instance_set"], [8, 2, 1, "", "set_action_values"]], "dacbench.benchmarks.theory_benchmark": [[9, 1, 1, "", "TheoryBenchmark"]], "dacbench.benchmarks.theory_benchmark.TheoryBenchmark": [[9, 2, 1, "", "create_observation_space_from_description"], [9, 2, 1, "", "get_environment"], [9, 2, 1, "", "read_instance_set"]], "dacbench.benchmarks.toysgd_benchmark": [[10, 1, 1, "", "ToySGDBenchmark"]], "dacbench.benchmarks.toysgd_benchmark.ToySGDBenchmark": [[10, 2, 1, "", "get_environment"], [10, 2, 1, "", "read_instance_set"]], "dacbench.envs": [[2, 0, 0, "-", "cma_es"], [3, 0, 0, "-", "fast_downward"], [4, 0, 0, "-", "geometric"], [5, 0, 0, "-", "luby"], [6, 0, 0, "-", "modcma"], [7, 0, 0, "-", "sgd"], [8, 0, 0, "-", "sigmoid"], [9, 0, 0, "-", "theory"], [10, 0, 0, "-", "toysgd"]], "dacbench.envs.cma_es": [[2, 1, 1, "", "CMAESEnv"]], "dacbench.envs.cma_es.CMAESEnv": [[2, 2, 1, "", "close"], [2, 2, 1, "", "get_default_reward"], [2, 2, 1, "", "get_default_state"], [2, 2, 1, "", "render"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "step"]], "dacbench.envs.fast_downward": [[3, 1, 1, "", "FastDownwardEnv"], [3, 1, 1, "", "StateType"]], "dacbench.envs.fast_downward.FastDownwardEnv": [[3, 2, 1, "", "close"], [3, 2, 1, "", "kill_connection"], [3, 2, 1, "", "recv_msg"], [3, 2, 1, "", "recvall"], [3, 2, 1, "", "render"], [3, 2, 1, "", "reset"], [3, 2, 1, "", "send_msg"], [3, 2, 1, "", "step"]], "dacbench.envs.geometric": [[4, 1, 1, "", "GeometricEnv"]], "dacbench.envs.geometric.GeometricEnv": [[4, 2, 1, "", "close"], [4, 2, 1, "", "get_default_reward"], [4, 2, 1, "", "get_default_state"], [4, 2, 1, "", "get_optimal_policy"], [4, 2, 1, "", "render"], [4, 2, 1, "", "render_3d_dimensions"], [4, 2, 1, "", "reset"], [4, 2, 1, "", "step"]], "dacbench.envs.luby": [[5, 1, 1, "", "LubyEnv"], [5, 4, 1, "", "luby_gen"]], "dacbench.envs.luby.LubyEnv": [[5, 2, 1, "", "close"], [5, 2, 1, "", "render"], [5, 2, 1, "", "reset"], [5, 2, 1, "", "step"]], "dacbench.envs.modcma": [[6, 1, 1, "", "ModCMAEnv"]], "dacbench.envs.modcma.ModCMAEnv": [[6, 2, 1, "", "close"], [6, 2, 1, "", "reset"], [6, 2, 1, "", "step"]], "dacbench.envs.sgd": [[7, 1, 1, "", "Reward"], [7, 1, 1, "", "SGDEnv"]], "dacbench.envs.sgd.Reward": [[7, 2, 1, "", "__call__"]], "dacbench.envs.sgd.SGDEnv": [[7, 2, 1, "", "close"], [7, 2, 1, "", "get_default_state"], [7, 2, 1, "", "render"], [7, 2, 1, "", "reset"], [7, 2, 1, "", "seed"], [7, 2, 1, "", "step"], [7, 5, 1, "", "val_model"]], "dacbench.envs.sigmoid": [[8, 1, 1, "", "ContinuousSigmoidEnv"], [8, 1, 1, "", "ContinuousStateSigmoidEnv"], [8, 1, 1, "", "SigmoidEnv"]], "dacbench.envs.sigmoid.ContinuousSigmoidEnv": [[8, 2, 1, "", "step"]], "dacbench.envs.sigmoid.ContinuousStateSigmoidEnv": [[8, 2, 1, "", "step"]], "dacbench.envs.sigmoid.SigmoidEnv": [[8, 2, 1, "", "close"], [8, 2, 1, "", "get_default_reward"], [8, 2, 1, "", "get_default_state"], [8, 2, 1, "", "render"], [8, 2, 1, "", "reset"], [8, 2, 1, "", "step"]], "dacbench.envs.theory": [[9, 1, 1, "", "BinaryProblem"], [9, 1, 1, "", "LeadingOne"], [9, 1, 1, "", "RLSEnv"], [9, 1, 1, "", "RLSEnvDiscrete"]], "dacbench.envs.theory.BinaryProblem": [[9, 2, 1, "", "combine"], [9, 2, 1, "", "crossover"], [9, 2, 1, "", "eval"], [9, 2, 1, "", "flip"], [9, 2, 1, "", "get_fitness_after_crossover"], [9, 2, 1, "", "get_fitness_after_flipping"], [9, 2, 1, "", "get_optimal"], [9, 2, 1, "", "initialise_with_fixed_number_of_bits"], [9, 2, 1, "", "is_optimal"], [9, 2, 1, "", "mutate"], [9, 2, 1, "", "mutate_rls"]], "dacbench.envs.theory.LeadingOne": [[9, 2, 1, "", "eval"], [9, 2, 1, "", "get_fitness_after_crossover"], [9, 2, 1, "", "get_fitness_after_flipping"], [9, 2, 1, "", "get_optimal"], [9, 2, 1, "", "is_optimal"]], "dacbench.envs.theory.RLSEnv": [[9, 2, 1, "", "close"], [9, 2, 1, "", "get_obs_domain_from_name"], [9, 2, 1, "", "get_state"], [9, 2, 1, "", "reset"], [9, 2, 1, "", "step"]], "dacbench.envs.theory.RLSEnvDiscrete": [[9, 2, 1, "", "step"]], "dacbench.envs.toysgd": [[10, 1, 1, "", "ToySGDEnv"], [10, 4, 1, "", "create_polynomial_instance_set"], [10, 4, 1, "", "sample_coefficients"]], "dacbench.envs.toysgd.ToySGDEnv": [[10, 2, 1, "", "build_objective_function"], [10, 2, 1, "", "close"], [10, 2, 1, "", "get_initial_position"], [10, 2, 1, "", "render"], [10, 2, 1, "", "reset"], [10, 2, 1, "", "step"]], "dacbench.logger": [[17, 1, 1, "", "AbstractLogger"], [17, 1, 1, "", "Logger"], [17, 1, 1, "", "ModuleLogger"], [17, 4, 1, "", "flatten_log_entry"], [17, 4, 1, "", "instance_mapper"], [17, 4, 1, "", "list_to_tuple"], [17, 4, 1, "", "load_logs"], [17, 4, 1, "", "log2dataframe"], [17, 4, 1, "", "seed_mapper"], [17, 4, 1, "", "split"]], "dacbench.logger.AbstractLogger": [[17, 3, 1, "", "additional_info"], [17, 2, 1, "", "close"], [17, 2, 1, "", "is_of_valid_type"], [17, 2, 1, "", "log"], [17, 2, 1, "", "log_dict"], [17, 2, 1, "", "log_space"], [17, 2, 1, "", "next_episode"], [17, 2, 1, "", "next_step"], [17, 2, 1, "", "set_env"], [17, 2, 1, "", "write"]], "dacbench.logger.Logger": [[17, 2, 1, "", "__del__"], [17, 2, 1, "", "add_agent"], [17, 2, 1, "", "add_benchmark"], [17, 2, 1, "", "add_module"], [17, 2, 1, "", "close"], [17, 2, 1, "", "log"], [17, 2, 1, "", "log_dict"], [17, 2, 1, "", "log_space"], [17, 2, 1, "", "next_episode"], [17, 2, 1, "", "next_step"], [17, 2, 1, "", "reset_episode"], [17, 2, 1, "", "set_additional_info"], [17, 2, 1, "", "set_env"], [17, 2, 1, "", "write"]], "dacbench.logger.ModuleLogger": [[17, 2, 1, "", "__del__"], [17, 2, 1, "", "close"], [17, 2, 1, "", "get_logfile"], [17, 2, 1, "", "log"], [17, 2, 1, "", "log_dict"], [17, 2, 1, "", "log_space"], [17, 2, 1, "", "next_episode"], [17, 2, 1, "", "next_step"], [17, 2, 1, "", "reset_episode"], [17, 2, 1, "", "set_additional_info"], [17, 2, 1, "", "write"]], "dacbench.plotting": [[21, 4, 1, "", "add_multi_level_ticks"], [21, 4, 1, "", "generate_global_step"], [21, 4, 1, "", "plot"], [21, 4, 1, "", "plot_action"], [21, 4, 1, "", "plot_episode_time"], [21, 4, 1, "", "plot_performance"], [21, 4, 1, "", "plot_performance_per_instance"], [21, 4, 1, "", "plot_space"], [21, 4, 1, "", "plot_state"], [21, 4, 1, "", "plot_step_time"], [21, 4, 1, "", "space_sep_upper"]], "dacbench.wrappers": [[23, 1, 1, "", "ActionFrequencyWrapper"], [23, 1, 1, "", "EpisodeTimeWrapper"], [23, 1, 1, "", "InstanceSamplingWrapper"], [23, 1, 1, "", "MultiDiscreteActionWrapper"], [23, 1, 1, "", "ObservationWrapper"], [23, 1, 1, "", "PerformanceTrackingWrapper"], [23, 1, 1, "", "PolicyProgressWrapper"], [23, 1, 1, "", "RewardNoiseWrapper"], [23, 1, 1, "", "StateTrackingWrapper"]], "dacbench.wrappers.ActionFrequencyWrapper": [[23, 2, 1, "", "__getattribute__"], [23, 2, 1, "", "__setattr__"], [23, 2, 1, "", "get_actions"], [23, 2, 1, "", "render_action_tracking"], [23, 2, 1, "", "step"]], "dacbench.wrappers.EpisodeTimeWrapper": [[23, 2, 1, "", "__getattribute__"], [23, 2, 1, "", "__setattr__"], [23, 2, 1, "", "get_times"], [23, 2, 1, "", "render_episode_time"], [23, 2, 1, "", "render_step_time"], [23, 2, 1, "", "step"]], "dacbench.wrappers.InstanceSamplingWrapper": [[23, 2, 1, "", "__getattribute__"], [23, 2, 1, "", "__setattr__"], [23, 2, 1, "", "fit_dist"], [23, 2, 1, "", "reset"]], "dacbench.wrappers.MultiDiscreteActionWrapper": [[23, 2, 1, "", "step"]], "dacbench.wrappers.ObservationWrapper": [[23, 2, 1, "", "__getattribute__"], [23, 2, 1, "", "__setattr__"], [23, 2, 1, "", "flatten"], [23, 2, 1, "", "reset"], [23, 2, 1, "", "step"]], "dacbench.wrappers.PerformanceTrackingWrapper": [[23, 2, 1, "", "__getattribute__"], [23, 2, 1, "", "__setattr__"], [23, 2, 1, "", "get_performance"], [23, 2, 1, "", "render_instance_performance"], [23, 2, 1, "", "render_performance"], [23, 2, 1, "", "step"]], "dacbench.wrappers.PolicyProgressWrapper": [[23, 2, 1, "", "__getattribute__"], [23, 2, 1, "", "__setattr__"], [23, 2, 1, "", "render_policy_progress"], [23, 2, 1, "", "step"]], "dacbench.wrappers.RewardNoiseWrapper": [[23, 2, 1, "", "__getattribute__"], [23, 2, 1, "", "__setattr__"], [23, 2, 1, "", "add_noise"], [23, 2, 1, "", "step"]], "dacbench.wrappers.StateTrackingWrapper": [[23, 2, 1, "", "__getattribute__"], [23, 2, 1, "", "__setattr__"], [23, 2, 1, "", "get_states"], [23, 2, 1, "", "render_state_tracking"], [23, 2, 1, "", "reset"], [23, 2, 1, "", "step"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:property", "4": "py:function", "5": "py:attribute"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "property", "Python property"], "4": ["py", "function", "Python function"], "5": ["py", "attribute", "Python attribute"]}, "titleterms": {"welcom": 0, "dacbench": [0, 1, 12, 13, 14, 16, 19], "": 0, "document": 0, "get": 0, "start": 0, "The": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10], "benchmark": [0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 14, 18], "us": [0, 13], "misc": 0, "pycma": 2, "cma": 2, "e": 2, "fastdownward": 3, "geometr": 4, "toi": [4, 5, 8], "lubi": 5, "iohprofil": 6, "modcma": 6, "sgd": 7, "deep": 7, "learn": 7, "sigmoid": 8, "theori": 9, "toysgd": 10, "overview": [11, 15], "cite": 12, "contain": 13, "contribut": 14, "guidelin": 14, "pull": 14, "request": 14, "ad": 14, "dynam": 15, "algorithm": 15, "configur": [15, 18], "A": 15, "short": 15, "how": 16, "instal": 16, "log": 17, "experi": 17, "save": 18, "load": 18, "multi": 20, "agent": 20, "dac": 20, "plot": 21, "result": 21, "modifi": 22, "observ": 22, "cost": 22, "function": 23, "through": 23, "wrapper": 23}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.viewcode": 1, "sphinx": 57}, "alltitles": {"Welcome to DACBench\u2019s documentation!": [[0, "welcome-to-dacbench-s-documentation"]], "Getting Started:": [[0, null]], "The Benchmarks:": [[0, null]], "Using DACBench:": [[0, null]], "Misc:": [[0, null]], "dacbench": [[1, "dacbench"], [19, "dacbench"]], "The PyCMA CMA-ES Benchmark": [[2, "the-pycma-cma-es-benchmark"]], "The FastDownward Benchmark": [[3, "the-fastdownward-benchmark"]], "The Geometric Toy Benchmark": [[4, "the-geometric-toy-benchmark"]], "The Luby Toy Benchmark": [[5, "the-luby-toy-benchmark"]], "The IOHProfiler ModCMA Benchmark": [[6, "the-iohprofiler-modcma-benchmark"]], "The SGD Deep Learning Benchmark": [[7, "the-sgd-deep-learning-benchmark"]], "The Sigmoid Toy Benchmark": [[8, "the-sigmoid-toy-benchmark"]], "The Theory Benchmark": [[9, "the-theory-benchmark"]], "The ToySGD Benchmark": [[10, "the-toysgd-benchmark"]], "Benchmark Overview": [[11, "benchmark-overview"]], "Citing DACBench": [[12, "citing-dacbench"]], "Using DACBench Containers": [[13, "using-dacbench-containers"]], "Contributing to DACBench": [[14, "contributing-to-dacbench"]], "Guidelines for Pull-Requests": [[14, "guidelines-for-pull-requests"]], "Adding a Benchmark": [[14, "adding-a-benchmark"]], "Dynamic Algorithm Configuration - A Short Overview": [[15, "dynamic-algorithm-configuration-a-short-overview"]], "How to Install DACBench": [[16, "how-to-install-dacbench"]], "Logging Experiments": [[17, "logging-experiments"]], "Saving & Loading Benchmark Configurations": [[18, "saving-loading-benchmark-configurations"]], "Multi-Agent DAC": [[20, "multi-agent-dac"]], "Plotting results": [[21, "plotting-results"]], "Modifying Observations & Cost": [[22, "modifying-observations-cost"]], "Functionality through Wrappers": [[23, "functionality-through-wrappers"]]}, "indexentries": {"cmaesbenchmark (class in dacbench.benchmarks.cma_benchmark)": [[2, "dacbench.benchmarks.cma_benchmark.CMAESBenchmark"]], "cmaesenv (class in dacbench.envs.cma_es)": [[2, "dacbench.envs.cma_es.CMAESEnv"]], "close() (dacbench.envs.cma_es.cmaesenv method)": [[2, "dacbench.envs.cma_es.CMAESEnv.close"]], "dacbench.benchmarks.cma_benchmark": [[2, "module-dacbench.benchmarks.cma_benchmark"]], "dacbench.envs.cma_es": [[2, "module-dacbench.envs.cma_es"]], "get_benchmark() (dacbench.benchmarks.cma_benchmark.cmaesbenchmark method)": [[2, "dacbench.benchmarks.cma_benchmark.CMAESBenchmark.get_benchmark"]], "get_default_reward() (dacbench.envs.cma_es.cmaesenv method)": [[2, "dacbench.envs.cma_es.CMAESEnv.get_default_reward"]], "get_default_state() (dacbench.envs.cma_es.cmaesenv method)": [[2, "dacbench.envs.cma_es.CMAESEnv.get_default_state"]], "get_environment() (dacbench.benchmarks.cma_benchmark.cmaesbenchmark method)": [[2, "dacbench.benchmarks.cma_benchmark.CMAESBenchmark.get_environment"]], "module": [[2, "module-dacbench.benchmarks.cma_benchmark"], [2, "module-dacbench.envs.cma_es"], [3, "module-dacbench.benchmarks.fast_downward_benchmark"], [3, "module-dacbench.envs.fast_downward"], [4, "module-dacbench.benchmarks.geometric_benchmark"], [4, "module-dacbench.envs.geometric"], [5, "module-dacbench.benchmarks.luby_benchmark"], [5, "module-dacbench.envs.luby"], [6, "module-dacbench.benchmarks.modcma_benchmark"], [6, "module-dacbench.envs.modcma"], [7, "module-dacbench.benchmarks.sgd_benchmark"], [7, "module-dacbench.envs.sgd"], [8, "module-dacbench.benchmarks.sigmoid_benchmark"], [8, "module-dacbench.envs.sigmoid"], [9, "module-dacbench.benchmarks.theory_benchmark"], [9, "module-dacbench.envs.theory"], [10, "module-dacbench.benchmarks.toysgd_benchmark"], [10, "module-dacbench.envs.toysgd"], [11, "module-dacbench.abstract_benchmark"], [11, "module-dacbench.abstract_env"], [17, "module-dacbench.logger"], [20, "module-dacbench.abstract_env"], [21, "module-dacbench.plotting"], [23, "module-dacbench.wrappers"]], "read_instance_set() (dacbench.benchmarks.cma_benchmark.cmaesbenchmark method)": [[2, "dacbench.benchmarks.cma_benchmark.CMAESBenchmark.read_instance_set"]], "render() (dacbench.envs.cma_es.cmaesenv method)": [[2, "dacbench.envs.cma_es.CMAESEnv.render"]], "reset() (dacbench.envs.cma_es.cmaesenv method)": [[2, "dacbench.envs.cma_es.CMAESEnv.reset"]], "step() (dacbench.envs.cma_es.cmaesenv method)": [[2, "dacbench.envs.cma_es.CMAESEnv.step"]], "fastdownwardbenchmark (class in dacbench.benchmarks.fast_downward_benchmark)": [[3, "dacbench.benchmarks.fast_downward_benchmark.FastDownwardBenchmark"]], "fastdownwardenv (class in dacbench.envs.fast_downward)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv"]], "statetype (class in dacbench.envs.fast_downward)": [[3, "dacbench.envs.fast_downward.StateType"]], "close() (dacbench.envs.fast_downward.fastdownwardenv method)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv.close"]], "dacbench.benchmarks.fast_downward_benchmark": [[3, "module-dacbench.benchmarks.fast_downward_benchmark"]], "dacbench.envs.fast_downward": [[3, "module-dacbench.envs.fast_downward"]], "get_benchmark() (dacbench.benchmarks.fast_downward_benchmark.fastdownwardbenchmark method)": [[3, "dacbench.benchmarks.fast_downward_benchmark.FastDownwardBenchmark.get_benchmark"]], "get_environment() (dacbench.benchmarks.fast_downward_benchmark.fastdownwardbenchmark method)": [[3, "dacbench.benchmarks.fast_downward_benchmark.FastDownwardBenchmark.get_environment"]], "kill_connection() (dacbench.envs.fast_downward.fastdownwardenv method)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv.kill_connection"]], "read_instance_set() (dacbench.benchmarks.fast_downward_benchmark.fastdownwardbenchmark method)": [[3, "dacbench.benchmarks.fast_downward_benchmark.FastDownwardBenchmark.read_instance_set"]], "recv_msg() (dacbench.envs.fast_downward.fastdownwardenv method)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv.recv_msg"]], "recvall() (dacbench.envs.fast_downward.fastdownwardenv method)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv.recvall"]], "render() (dacbench.envs.fast_downward.fastdownwardenv method)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv.render"]], "reset() (dacbench.envs.fast_downward.fastdownwardenv method)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv.reset"]], "send_msg() (dacbench.envs.fast_downward.fastdownwardenv method)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv.send_msg"]], "step() (dacbench.envs.fast_downward.fastdownwardenv method)": [[3, "dacbench.envs.fast_downward.FastDownwardEnv.step"]], "geometricbenchmark (class in dacbench.benchmarks.geometric_benchmark)": [[4, "dacbench.benchmarks.geometric_benchmark.GeometricBenchmark"]], "geometricenv (class in dacbench.envs.geometric)": [[4, "dacbench.envs.geometric.GeometricEnv"]], "close() (dacbench.envs.geometric.geometricenv method)": [[4, "dacbench.envs.geometric.GeometricEnv.close"]], "create_correlation_table() (dacbench.benchmarks.geometric_benchmark.geometricbenchmark method)": [[4, "dacbench.benchmarks.geometric_benchmark.GeometricBenchmark.create_correlation_table"]], "dacbench.benchmarks.geometric_benchmark": [[4, "module-dacbench.benchmarks.geometric_benchmark"]], "dacbench.envs.geometric": [[4, "module-dacbench.envs.geometric"]], "get_benchmark() (dacbench.benchmarks.geometric_benchmark.geometricbenchmark method)": [[4, "dacbench.benchmarks.geometric_benchmark.GeometricBenchmark.get_benchmark"]], "get_default_reward() (dacbench.envs.geometric.geometricenv method)": [[4, "dacbench.envs.geometric.GeometricEnv.get_default_reward"]], "get_default_state() (dacbench.envs.geometric.geometricenv method)": [[4, "dacbench.envs.geometric.GeometricEnv.get_default_state"]], "get_environment() (dacbench.benchmarks.geometric_benchmark.geometricbenchmark method)": [[4, "dacbench.benchmarks.geometric_benchmark.GeometricBenchmark.get_environment"]], "get_optimal_policy() (dacbench.envs.geometric.geometricenv method)": [[4, "dacbench.envs.geometric.GeometricEnv.get_optimal_policy"]], "read_instance_set() (dacbench.benchmarks.geometric_benchmark.geometricbenchmark method)": [[4, "dacbench.benchmarks.geometric_benchmark.GeometricBenchmark.read_instance_set"]], "render() (dacbench.envs.geometric.geometricenv method)": [[4, "dacbench.envs.geometric.GeometricEnv.render"]], "render_3d_dimensions() (dacbench.envs.geometric.geometricenv method)": [[4, "dacbench.envs.geometric.GeometricEnv.render_3d_dimensions"]], "reset() (dacbench.envs.geometric.geometricenv method)": [[4, "dacbench.envs.geometric.GeometricEnv.reset"]], "set_action_description() (dacbench.benchmarks.geometric_benchmark.geometricbenchmark method)": [[4, "dacbench.benchmarks.geometric_benchmark.GeometricBenchmark.set_action_description"]], "set_action_values() (dacbench.benchmarks.geometric_benchmark.geometricbenchmark method)": [[4, "dacbench.benchmarks.geometric_benchmark.GeometricBenchmark.set_action_values"]], "step() (dacbench.envs.geometric.geometricenv method)": [[4, "dacbench.envs.geometric.GeometricEnv.step"]], "lubybenchmark (class in dacbench.benchmarks.luby_benchmark)": [[5, "dacbench.benchmarks.luby_benchmark.LubyBenchmark"]], "lubyenv (class in dacbench.envs.luby)": [[5, "dacbench.envs.luby.LubyEnv"]], "close() (dacbench.envs.luby.lubyenv method)": [[5, "dacbench.envs.luby.LubyEnv.close"]], "dacbench.benchmarks.luby_benchmark": [[5, "module-dacbench.benchmarks.luby_benchmark"]], "dacbench.envs.luby": [[5, "module-dacbench.envs.luby"]], "get_benchmark() (dacbench.benchmarks.luby_benchmark.lubybenchmark method)": [[5, "dacbench.benchmarks.luby_benchmark.LubyBenchmark.get_benchmark"]], "get_environment() (dacbench.benchmarks.luby_benchmark.lubybenchmark method)": [[5, "dacbench.benchmarks.luby_benchmark.LubyBenchmark.get_environment"]], "luby_gen() (in module dacbench.envs.luby)": [[5, "dacbench.envs.luby.luby_gen"]], "read_instance_set() (dacbench.benchmarks.luby_benchmark.lubybenchmark method)": [[5, "dacbench.benchmarks.luby_benchmark.LubyBenchmark.read_instance_set"]], "render() (dacbench.envs.luby.lubyenv method)": [[5, "dacbench.envs.luby.LubyEnv.render"]], "reset() (dacbench.envs.luby.lubyenv method)": [[5, "dacbench.envs.luby.LubyEnv.reset"]], "set_cutoff() (dacbench.benchmarks.luby_benchmark.lubybenchmark method)": [[5, "dacbench.benchmarks.luby_benchmark.LubyBenchmark.set_cutoff"]], "set_history_length() (dacbench.benchmarks.luby_benchmark.lubybenchmark method)": [[5, "dacbench.benchmarks.luby_benchmark.LubyBenchmark.set_history_length"]], "step() (dacbench.envs.luby.lubyenv method)": [[5, "dacbench.envs.luby.LubyEnv.step"]], "modcmabenchmark (class in dacbench.benchmarks.modcma_benchmark)": [[6, "dacbench.benchmarks.modcma_benchmark.ModCMABenchmark"]], "modcmaenv (class in dacbench.envs.modcma)": [[6, "dacbench.envs.modcma.ModCMAEnv"]], "close() (dacbench.envs.modcma.modcmaenv method)": [[6, "dacbench.envs.modcma.ModCMAEnv.close"]], "dacbench.benchmarks.modcma_benchmark": [[6, "module-dacbench.benchmarks.modcma_benchmark"]], "dacbench.envs.modcma": [[6, "module-dacbench.envs.modcma"]], "get_environment() (dacbench.benchmarks.modcma_benchmark.modcmabenchmark method)": [[6, "dacbench.benchmarks.modcma_benchmark.ModCMABenchmark.get_environment"]], "reset() (dacbench.envs.modcma.modcmaenv method)": [[6, "dacbench.envs.modcma.ModCMAEnv.reset"]], "step() (dacbench.envs.modcma.modcmaenv method)": [[6, "dacbench.envs.modcma.ModCMAEnv.step"]], "reward (class in dacbench.envs.sgd)": [[7, "dacbench.envs.sgd.Reward"]], "sgdbenchmark (class in dacbench.benchmarks.sgd_benchmark)": [[7, "dacbench.benchmarks.sgd_benchmark.SGDBenchmark"]], "sgdenv (class in dacbench.envs.sgd)": [[7, "dacbench.envs.sgd.SGDEnv"]], "__call__() (dacbench.envs.sgd.reward method)": [[7, "dacbench.envs.sgd.Reward.__call__"]], "close() (dacbench.envs.sgd.sgdenv method)": [[7, "dacbench.envs.sgd.SGDEnv.close"]], "dacbench.benchmarks.sgd_benchmark": [[7, "module-dacbench.benchmarks.sgd_benchmark"]], "dacbench.envs.sgd": [[7, "module-dacbench.envs.sgd"]], "get_benchmark() (dacbench.benchmarks.sgd_benchmark.sgdbenchmark method)": [[7, "dacbench.benchmarks.sgd_benchmark.SGDBenchmark.get_benchmark"]], "get_default_state() (dacbench.envs.sgd.sgdenv method)": [[7, "dacbench.envs.sgd.SGDEnv.get_default_state"]], "get_environment() (dacbench.benchmarks.sgd_benchmark.sgdbenchmark method)": [[7, "dacbench.benchmarks.sgd_benchmark.SGDBenchmark.get_environment"]], "read_instance_set() (dacbench.benchmarks.sgd_benchmark.sgdbenchmark method)": [[7, "dacbench.benchmarks.sgd_benchmark.SGDBenchmark.read_instance_set"]], "render() (dacbench.envs.sgd.sgdenv method)": [[7, "dacbench.envs.sgd.SGDEnv.render"]], "reset() (dacbench.envs.sgd.sgdenv method)": [[7, "dacbench.envs.sgd.SGDEnv.reset"]], "seed() (dacbench.envs.sgd.sgdenv method)": [[7, "dacbench.envs.sgd.SGDEnv.seed"]], "step() (dacbench.envs.sgd.sgdenv method)": [[7, "dacbench.envs.sgd.SGDEnv.step"]], "val_model (dacbench.envs.sgd.sgdenv attribute)": [[7, "dacbench.envs.sgd.SGDEnv.val_model"]], "continuoussigmoidenv (class in dacbench.envs.sigmoid)": [[8, "dacbench.envs.sigmoid.ContinuousSigmoidEnv"]], "continuousstatesigmoidenv (class in dacbench.envs.sigmoid)": [[8, "dacbench.envs.sigmoid.ContinuousStateSigmoidEnv"]], "sigmoidbenchmark (class in dacbench.benchmarks.sigmoid_benchmark)": [[8, "dacbench.benchmarks.sigmoid_benchmark.SigmoidBenchmark"]], "sigmoidenv (class in dacbench.envs.sigmoid)": [[8, "dacbench.envs.sigmoid.SigmoidEnv"]], "close() (dacbench.envs.sigmoid.sigmoidenv method)": [[8, "dacbench.envs.sigmoid.SigmoidEnv.close"]], "dacbench.benchmarks.sigmoid_benchmark": [[8, "module-dacbench.benchmarks.sigmoid_benchmark"]], "dacbench.envs.sigmoid": [[8, "module-dacbench.envs.sigmoid"]], "get_benchmark() (dacbench.benchmarks.sigmoid_benchmark.sigmoidbenchmark method)": [[8, "dacbench.benchmarks.sigmoid_benchmark.SigmoidBenchmark.get_benchmark"]], "get_default_reward() (dacbench.envs.sigmoid.sigmoidenv method)": [[8, "dacbench.envs.sigmoid.SigmoidEnv.get_default_reward"]], "get_default_state() (dacbench.envs.sigmoid.sigmoidenv method)": [[8, "dacbench.envs.sigmoid.SigmoidEnv.get_default_state"]], "get_environment() (dacbench.benchmarks.sigmoid_benchmark.sigmoidbenchmark method)": [[8, "dacbench.benchmarks.sigmoid_benchmark.SigmoidBenchmark.get_environment"]], "read_instance_set() (dacbench.benchmarks.sigmoid_benchmark.sigmoidbenchmark method)": [[8, "dacbench.benchmarks.sigmoid_benchmark.SigmoidBenchmark.read_instance_set"]], "render() (dacbench.envs.sigmoid.sigmoidenv method)": [[8, "dacbench.envs.sigmoid.SigmoidEnv.render"]], "reset() (dacbench.envs.sigmoid.sigmoidenv method)": [[8, "dacbench.envs.sigmoid.SigmoidEnv.reset"]], "set_action_values() (dacbench.benchmarks.sigmoid_benchmark.sigmoidbenchmark method)": [[8, "dacbench.benchmarks.sigmoid_benchmark.SigmoidBenchmark.set_action_values"]], "step() (dacbench.envs.sigmoid.continuoussigmoidenv method)": [[8, "dacbench.envs.sigmoid.ContinuousSigmoidEnv.step"]], "step() (dacbench.envs.sigmoid.continuousstatesigmoidenv method)": [[8, "dacbench.envs.sigmoid.ContinuousStateSigmoidEnv.step"]], "step() (dacbench.envs.sigmoid.sigmoidenv method)": [[8, "dacbench.envs.sigmoid.SigmoidEnv.step"]], "binaryproblem (class in dacbench.envs.theory)": [[9, "dacbench.envs.theory.BinaryProblem"]], "leadingone (class in dacbench.envs.theory)": [[9, "dacbench.envs.theory.LeadingOne"]], "rlsenv (class in dacbench.envs.theory)": [[9, "dacbench.envs.theory.RLSEnv"]], "rlsenvdiscrete (class in dacbench.envs.theory)": [[9, "dacbench.envs.theory.RLSEnvDiscrete"]], "theorybenchmark (class in dacbench.benchmarks.theory_benchmark)": [[9, "dacbench.benchmarks.theory_benchmark.TheoryBenchmark"]], "close() (dacbench.envs.theory.rlsenv method)": [[9, "dacbench.envs.theory.RLSEnv.close"]], "combine() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.combine"]], "create_observation_space_from_description() (dacbench.benchmarks.theory_benchmark.theorybenchmark method)": [[9, "dacbench.benchmarks.theory_benchmark.TheoryBenchmark.create_observation_space_from_description"]], "crossover() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.crossover"]], "dacbench.benchmarks.theory_benchmark": [[9, "module-dacbench.benchmarks.theory_benchmark"]], "dacbench.envs.theory": [[9, "module-dacbench.envs.theory"]], "eval() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.eval"]], "eval() (dacbench.envs.theory.leadingone method)": [[9, "dacbench.envs.theory.LeadingOne.eval"]], "flip() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.flip"]], "get_environment() (dacbench.benchmarks.theory_benchmark.theorybenchmark method)": [[9, "dacbench.benchmarks.theory_benchmark.TheoryBenchmark.get_environment"]], "get_fitness_after_crossover() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.get_fitness_after_crossover"]], "get_fitness_after_crossover() (dacbench.envs.theory.leadingone method)": [[9, "dacbench.envs.theory.LeadingOne.get_fitness_after_crossover"]], "get_fitness_after_flipping() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.get_fitness_after_flipping"]], "get_fitness_after_flipping() (dacbench.envs.theory.leadingone method)": [[9, "dacbench.envs.theory.LeadingOne.get_fitness_after_flipping"]], "get_obs_domain_from_name() (dacbench.envs.theory.rlsenv method)": [[9, "dacbench.envs.theory.RLSEnv.get_obs_domain_from_name"]], "get_optimal() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.get_optimal"]], "get_optimal() (dacbench.envs.theory.leadingone method)": [[9, "dacbench.envs.theory.LeadingOne.get_optimal"]], "get_state() (dacbench.envs.theory.rlsenv method)": [[9, "dacbench.envs.theory.RLSEnv.get_state"]], "initialise_with_fixed_number_of_bits() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.initialise_with_fixed_number_of_bits"]], "is_optimal() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.is_optimal"]], "is_optimal() (dacbench.envs.theory.leadingone method)": [[9, "dacbench.envs.theory.LeadingOne.is_optimal"]], "mutate() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.mutate"]], "mutate_rls() (dacbench.envs.theory.binaryproblem method)": [[9, "dacbench.envs.theory.BinaryProblem.mutate_rls"]], "read_instance_set() (dacbench.benchmarks.theory_benchmark.theorybenchmark method)": [[9, "dacbench.benchmarks.theory_benchmark.TheoryBenchmark.read_instance_set"]], "reset() (dacbench.envs.theory.rlsenv method)": [[9, "dacbench.envs.theory.RLSEnv.reset"]], "step() (dacbench.envs.theory.rlsenv method)": [[9, "dacbench.envs.theory.RLSEnv.step"]], "step() (dacbench.envs.theory.rlsenvdiscrete method)": [[9, "dacbench.envs.theory.RLSEnvDiscrete.step"]], "toysgdbenchmark (class in dacbench.benchmarks.toysgd_benchmark)": [[10, "dacbench.benchmarks.toysgd_benchmark.ToySGDBenchmark"]], "toysgdenv (class in dacbench.envs.toysgd)": [[10, "dacbench.envs.toysgd.ToySGDEnv"]], "build_objective_function() (dacbench.envs.toysgd.toysgdenv method)": [[10, "dacbench.envs.toysgd.ToySGDEnv.build_objective_function"]], "close() (dacbench.envs.toysgd.toysgdenv method)": [[10, "dacbench.envs.toysgd.ToySGDEnv.close"]], "create_polynomial_instance_set() (in module dacbench.envs.toysgd)": [[10, "dacbench.envs.toysgd.create_polynomial_instance_set"]], "dacbench.benchmarks.toysgd_benchmark": [[10, "module-dacbench.benchmarks.toysgd_benchmark"]], "dacbench.envs.toysgd": [[10, "module-dacbench.envs.toysgd"]], "get_environment() (dacbench.benchmarks.toysgd_benchmark.toysgdbenchmark method)": [[10, "dacbench.benchmarks.toysgd_benchmark.ToySGDBenchmark.get_environment"]], "get_initial_position() (dacbench.envs.toysgd.toysgdenv method)": [[10, "dacbench.envs.toysgd.ToySGDEnv.get_initial_position"]], "read_instance_set() (dacbench.benchmarks.toysgd_benchmark.toysgdbenchmark method)": [[10, "dacbench.benchmarks.toysgd_benchmark.ToySGDBenchmark.read_instance_set"]], "render() (dacbench.envs.toysgd.toysgdenv method)": [[10, "dacbench.envs.toysgd.ToySGDEnv.render"]], "reset() (dacbench.envs.toysgd.toysgdenv method)": [[10, "dacbench.envs.toysgd.ToySGDEnv.reset"]], "sample_coefficients() (in module dacbench.envs.toysgd)": [[10, "dacbench.envs.toysgd.sample_coefficients"]], "step() (dacbench.envs.toysgd.toysgdenv method)": [[10, "dacbench.envs.toysgd.ToySGDEnv.step"]], "abstractbenchmark (class in dacbench.abstract_benchmark)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark"]], "abstractenv (class in dacbench.abstract_env)": [[11, "dacbench.abstract_env.AbstractEnv"], [20, "dacbench.abstract_env.AbstractEnv"]], "abstractmadacenv (class in dacbench.abstract_env)": [[11, "dacbench.abstract_env.AbstractMADACEnv"], [20, "dacbench.abstract_env.AbstractMADACEnv"]], "__delattr__() (dacbench.abstract_benchmark.objdict method)": [[11, "dacbench.abstract_benchmark.objdict.__delattr__"]], "__eq__() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.__eq__"]], "__eq__() (dacbench.abstract_benchmark.objdict method)": [[11, "dacbench.abstract_benchmark.objdict.__eq__"]], "__getattr__() (dacbench.abstract_benchmark.objdict method)": [[11, "dacbench.abstract_benchmark.objdict.__getattr__"]], "__ne__() (dacbench.abstract_benchmark.objdict method)": [[11, "dacbench.abstract_benchmark.objdict.__ne__"]], "__setattr__() (dacbench.abstract_benchmark.objdict method)": [[11, "dacbench.abstract_benchmark.objdict.__setattr__"]], "agent_selection (dacbench.abstract_env.abstractmadacenv property)": [[11, "dacbench.abstract_env.AbstractMADACEnv.agent_selection"], [20, "dacbench.abstract_env.AbstractMADACEnv.agent_selection"]], "class_to_str() (dacbench.abstract_benchmark.abstractbenchmark class method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.class_to_str"]], "copy() (dacbench.abstract_benchmark.objdict method)": [[11, "dacbench.abstract_benchmark.objdict.copy"]], "dacbench.abstract_benchmark": [[11, "module-dacbench.abstract_benchmark"]], "dacbench.abstract_env": [[11, "module-dacbench.abstract_env"], [20, "module-dacbench.abstract_env"]], "dejson_wrappers() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.dejson_wrappers"]], "dictify_json() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.dictify_json"]], "from_json() (dacbench.abstract_benchmark.abstractbenchmark class method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.from_json"]], "get_config() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.get_config"]], "get_environment() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.get_environment"]], "get_inst_id() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.get_inst_id"], [20, "dacbench.abstract_env.AbstractEnv.get_inst_id"]], "get_instance() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.get_instance"], [20, "dacbench.abstract_env.AbstractEnv.get_instance"]], "get_instance_set() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.get_instance_set"], [20, "dacbench.abstract_env.AbstractEnv.get_instance_set"]], "infos (dacbench.abstract_env.abstractmadacenv property)": [[11, "dacbench.abstract_env.AbstractMADACEnv.infos"], [20, "dacbench.abstract_env.AbstractMADACEnv.infos"]], "jsonify_dict_space() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.jsonify_dict_space"]], "jsonify_wrappers() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.jsonify_wrappers"]], "last() (dacbench.abstract_env.abstractmadacenv method)": [[11, "dacbench.abstract_env.AbstractMADACEnv.last"], [20, "dacbench.abstract_env.AbstractMADACEnv.last"]], "list_to_space() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.list_to_space"]], "load_config() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.load_config"]], "multi_agent_reset() (dacbench.abstract_env.abstractmadacenv method)": [[11, "dacbench.abstract_env.AbstractMADACEnv.multi_agent_reset"], [20, "dacbench.abstract_env.AbstractMADACEnv.multi_agent_reset"]], "multi_agent_step() (dacbench.abstract_env.abstractmadacenv method)": [[11, "dacbench.abstract_env.AbstractMADACEnv.multi_agent_step"], [20, "dacbench.abstract_env.AbstractMADACEnv.multi_agent_step"]], "num_agents (dacbench.abstract_env.abstractmadacenv property)": [[11, "dacbench.abstract_env.AbstractMADACEnv.num_agents"], [20, "dacbench.abstract_env.AbstractMADACEnv.num_agents"]], "objdict (class in dacbench.abstract_benchmark)": [[11, "dacbench.abstract_benchmark.objdict"]], "process_configspace() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.process_configspace"]], "read_config_file() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.read_config_file"]], "register_agent() (dacbench.abstract_env.abstractmadacenv method)": [[11, "dacbench.abstract_env.AbstractMADACEnv.register_agent"], [20, "dacbench.abstract_env.AbstractMADACEnv.register_agent"]], "register_wrapper() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.register_wrapper"]], "remove_agent() (dacbench.abstract_env.abstractmadacenv method)": [[11, "dacbench.abstract_env.AbstractMADACEnv.remove_agent"], [20, "dacbench.abstract_env.AbstractMADACEnv.remove_agent"]], "reset() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.reset"], [20, "dacbench.abstract_env.AbstractEnv.reset"]], "reset_() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.reset_"], [20, "dacbench.abstract_env.AbstractEnv.reset_"]], "rewards (dacbench.abstract_env.abstractmadacenv property)": [[11, "dacbench.abstract_env.AbstractMADACEnv.rewards"], [20, "dacbench.abstract_env.AbstractMADACEnv.rewards"]], "save_config() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.save_config"]], "seed() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.seed"], [20, "dacbench.abstract_env.AbstractEnv.seed"]], "serialize_config() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.serialize_config"]], "set_action_space() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.set_action_space"]], "set_inst_id() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.set_inst_id"], [20, "dacbench.abstract_env.AbstractEnv.set_inst_id"]], "set_instance() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.set_instance"], [20, "dacbench.abstract_env.AbstractEnv.set_instance"]], "set_instance_set() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.set_instance_set"], [20, "dacbench.abstract_env.AbstractEnv.set_instance_set"]], "set_observation_space() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.set_observation_space"]], "set_seed() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.set_seed"]], "space_to_list() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.space_to_list"]], "step() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.step"], [20, "dacbench.abstract_env.AbstractEnv.step"]], "step_() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.step_"], [20, "dacbench.abstract_env.AbstractEnv.step_"]], "terminations (dacbench.abstract_env.abstractmadacenv property)": [[11, "dacbench.abstract_env.AbstractMADACEnv.terminations"], [20, "dacbench.abstract_env.AbstractMADACEnv.terminations"]], "to_json() (dacbench.abstract_benchmark.abstractbenchmark method)": [[11, "dacbench.abstract_benchmark.AbstractBenchmark.to_json"]], "truncations (dacbench.abstract_env.abstractmadacenv property)": [[11, "dacbench.abstract_env.AbstractMADACEnv.truncations"], [20, "dacbench.abstract_env.AbstractMADACEnv.truncations"]], "use_next_instance() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.use_next_instance"], [20, "dacbench.abstract_env.AbstractEnv.use_next_instance"]], "use_test_set() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.use_test_set"], [20, "dacbench.abstract_env.AbstractEnv.use_test_set"]], "use_training_set() (dacbench.abstract_env.abstractenv method)": [[11, "dacbench.abstract_env.AbstractEnv.use_training_set"], [20, "dacbench.abstract_env.AbstractEnv.use_training_set"]], "abstractlogger (class in dacbench.logger)": [[17, "dacbench.logger.AbstractLogger"]], "logger (class in dacbench.logger)": [[17, "dacbench.logger.Logger"]], "modulelogger (class in dacbench.logger)": [[17, "dacbench.logger.ModuleLogger"]], "__del__() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.__del__"]], "__del__() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.__del__"]], "add_agent() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.add_agent"]], "add_benchmark() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.add_benchmark"]], "add_module() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.add_module"]], "additional_info (dacbench.logger.abstractlogger property)": [[17, "dacbench.logger.AbstractLogger.additional_info"]], "close() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.close"]], "close() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.close"]], "close() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.close"]], "dacbench.logger": [[17, "module-dacbench.logger"]], "flatten_log_entry() (in module dacbench.logger)": [[17, "dacbench.logger.flatten_log_entry"]], "get_logfile() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.get_logfile"]], "instance_mapper() (in module dacbench.logger)": [[17, "dacbench.logger.instance_mapper"]], "is_of_valid_type() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.is_of_valid_type"]], "list_to_tuple() (in module dacbench.logger)": [[17, "dacbench.logger.list_to_tuple"]], "load_logs() (in module dacbench.logger)": [[17, "dacbench.logger.load_logs"]], "log() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.log"]], "log() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.log"]], "log() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.log"]], "log2dataframe() (in module dacbench.logger)": [[17, "dacbench.logger.log2dataframe"]], "log_dict() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.log_dict"]], "log_dict() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.log_dict"]], "log_dict() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.log_dict"]], "log_space() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.log_space"]], "log_space() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.log_space"]], "log_space() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.log_space"]], "next_episode() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.next_episode"]], "next_episode() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.next_episode"]], "next_episode() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.next_episode"]], "next_step() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.next_step"]], "next_step() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.next_step"]], "next_step() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.next_step"]], "reset_episode() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.reset_episode"]], "reset_episode() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.reset_episode"]], "seed_mapper() (in module dacbench.logger)": [[17, "dacbench.logger.seed_mapper"]], "set_additional_info() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.set_additional_info"]], "set_additional_info() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.set_additional_info"]], "set_env() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.set_env"]], "set_env() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.set_env"]], "split() (in module dacbench.logger)": [[17, "dacbench.logger.split"]], "write() (dacbench.logger.abstractlogger method)": [[17, "dacbench.logger.AbstractLogger.write"]], "write() (dacbench.logger.logger method)": [[17, "dacbench.logger.Logger.write"]], "write() (dacbench.logger.modulelogger method)": [[17, "dacbench.logger.ModuleLogger.write"]], "add_multi_level_ticks() (in module dacbench.plotting)": [[21, "dacbench.plotting.add_multi_level_ticks"]], "dacbench.plotting": [[21, "module-dacbench.plotting"]], "generate_global_step() (in module dacbench.plotting)": [[21, "dacbench.plotting.generate_global_step"]], "plot() (in module dacbench.plotting)": [[21, "dacbench.plotting.plot"]], "plot_action() (in module dacbench.plotting)": [[21, "dacbench.plotting.plot_action"]], "plot_episode_time() (in module dacbench.plotting)": [[21, "dacbench.plotting.plot_episode_time"]], "plot_performance() (in module dacbench.plotting)": [[21, "dacbench.plotting.plot_performance"]], "plot_performance_per_instance() (in module dacbench.plotting)": [[21, "dacbench.plotting.plot_performance_per_instance"]], "plot_space() (in module dacbench.plotting)": [[21, "dacbench.plotting.plot_space"]], "plot_state() (in module dacbench.plotting)": [[21, "dacbench.plotting.plot_state"]], "plot_step_time() (in module dacbench.plotting)": [[21, "dacbench.plotting.plot_step_time"]], "space_sep_upper() (in module dacbench.plotting)": [[21, "dacbench.plotting.space_sep_upper"]], "actionfrequencywrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.ActionFrequencyWrapper"]], "episodetimewrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.EpisodeTimeWrapper"]], "instancesamplingwrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.InstanceSamplingWrapper"]], "multidiscreteactionwrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.MultiDiscreteActionWrapper"]], "observationwrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.ObservationWrapper"]], "performancetrackingwrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.PerformanceTrackingWrapper"]], "policyprogresswrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.PolicyProgressWrapper"]], "rewardnoisewrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.RewardNoiseWrapper"]], "statetrackingwrapper (class in dacbench.wrappers)": [[23, "dacbench.wrappers.StateTrackingWrapper"]], "__getattribute__() (dacbench.wrappers.actionfrequencywrapper method)": [[23, "dacbench.wrappers.ActionFrequencyWrapper.__getattribute__"]], "__getattribute__() (dacbench.wrappers.episodetimewrapper method)": [[23, "dacbench.wrappers.EpisodeTimeWrapper.__getattribute__"]], "__getattribute__() (dacbench.wrappers.instancesamplingwrapper method)": [[23, "dacbench.wrappers.InstanceSamplingWrapper.__getattribute__"]], "__getattribute__() (dacbench.wrappers.observationwrapper method)": [[23, "dacbench.wrappers.ObservationWrapper.__getattribute__"]], "__getattribute__() (dacbench.wrappers.performancetrackingwrapper method)": [[23, "dacbench.wrappers.PerformanceTrackingWrapper.__getattribute__"]], "__getattribute__() (dacbench.wrappers.policyprogresswrapper method)": [[23, "dacbench.wrappers.PolicyProgressWrapper.__getattribute__"]], "__getattribute__() (dacbench.wrappers.rewardnoisewrapper method)": [[23, "dacbench.wrappers.RewardNoiseWrapper.__getattribute__"]], "__getattribute__() (dacbench.wrappers.statetrackingwrapper method)": [[23, "dacbench.wrappers.StateTrackingWrapper.__getattribute__"]], "__setattr__() (dacbench.wrappers.actionfrequencywrapper method)": [[23, "dacbench.wrappers.ActionFrequencyWrapper.__setattr__"]], "__setattr__() (dacbench.wrappers.episodetimewrapper method)": [[23, "dacbench.wrappers.EpisodeTimeWrapper.__setattr__"]], "__setattr__() (dacbench.wrappers.instancesamplingwrapper method)": [[23, "dacbench.wrappers.InstanceSamplingWrapper.__setattr__"]], "__setattr__() (dacbench.wrappers.observationwrapper method)": [[23, "dacbench.wrappers.ObservationWrapper.__setattr__"]], "__setattr__() (dacbench.wrappers.performancetrackingwrapper method)": [[23, "dacbench.wrappers.PerformanceTrackingWrapper.__setattr__"]], "__setattr__() (dacbench.wrappers.policyprogresswrapper method)": [[23, "dacbench.wrappers.PolicyProgressWrapper.__setattr__"]], "__setattr__() (dacbench.wrappers.rewardnoisewrapper method)": [[23, "dacbench.wrappers.RewardNoiseWrapper.__setattr__"]], "__setattr__() (dacbench.wrappers.statetrackingwrapper method)": [[23, "dacbench.wrappers.StateTrackingWrapper.__setattr__"]], "add_noise() (dacbench.wrappers.rewardnoisewrapper method)": [[23, "dacbench.wrappers.RewardNoiseWrapper.add_noise"]], "dacbench.wrappers": [[23, "module-dacbench.wrappers"]], "fit_dist() (dacbench.wrappers.instancesamplingwrapper method)": [[23, "dacbench.wrappers.InstanceSamplingWrapper.fit_dist"]], "flatten() (dacbench.wrappers.observationwrapper method)": [[23, "dacbench.wrappers.ObservationWrapper.flatten"]], "get_actions() (dacbench.wrappers.actionfrequencywrapper method)": [[23, "dacbench.wrappers.ActionFrequencyWrapper.get_actions"]], "get_performance() (dacbench.wrappers.performancetrackingwrapper method)": [[23, "dacbench.wrappers.PerformanceTrackingWrapper.get_performance"]], "get_states() (dacbench.wrappers.statetrackingwrapper method)": [[23, "dacbench.wrappers.StateTrackingWrapper.get_states"]], "get_times() (dacbench.wrappers.episodetimewrapper method)": [[23, "dacbench.wrappers.EpisodeTimeWrapper.get_times"]], "render_action_tracking() (dacbench.wrappers.actionfrequencywrapper method)": [[23, "dacbench.wrappers.ActionFrequencyWrapper.render_action_tracking"]], "render_episode_time() (dacbench.wrappers.episodetimewrapper method)": [[23, "dacbench.wrappers.EpisodeTimeWrapper.render_episode_time"]], "render_instance_performance() (dacbench.wrappers.performancetrackingwrapper method)": [[23, "dacbench.wrappers.PerformanceTrackingWrapper.render_instance_performance"]], "render_performance() (dacbench.wrappers.performancetrackingwrapper method)": [[23, "dacbench.wrappers.PerformanceTrackingWrapper.render_performance"]], "render_policy_progress() (dacbench.wrappers.policyprogresswrapper method)": [[23, "dacbench.wrappers.PolicyProgressWrapper.render_policy_progress"]], "render_state_tracking() (dacbench.wrappers.statetrackingwrapper method)": [[23, "dacbench.wrappers.StateTrackingWrapper.render_state_tracking"]], "render_step_time() (dacbench.wrappers.episodetimewrapper method)": [[23, "dacbench.wrappers.EpisodeTimeWrapper.render_step_time"]], "reset() (dacbench.wrappers.instancesamplingwrapper method)": [[23, "dacbench.wrappers.InstanceSamplingWrapper.reset"]], "reset() (dacbench.wrappers.observationwrapper method)": [[23, "dacbench.wrappers.ObservationWrapper.reset"]], "reset() (dacbench.wrappers.statetrackingwrapper method)": [[23, "dacbench.wrappers.StateTrackingWrapper.reset"]], "step() (dacbench.wrappers.actionfrequencywrapper method)": [[23, "dacbench.wrappers.ActionFrequencyWrapper.step"]], "step() (dacbench.wrappers.episodetimewrapper method)": [[23, "dacbench.wrappers.EpisodeTimeWrapper.step"]], "step() (dacbench.wrappers.multidiscreteactionwrapper method)": [[23, "dacbench.wrappers.MultiDiscreteActionWrapper.step"]], "step() (dacbench.wrappers.observationwrapper method)": [[23, "dacbench.wrappers.ObservationWrapper.step"]], "step() (dacbench.wrappers.performancetrackingwrapper method)": [[23, "dacbench.wrappers.PerformanceTrackingWrapper.step"]], "step() (dacbench.wrappers.policyprogresswrapper method)": [[23, "dacbench.wrappers.PolicyProgressWrapper.step"]], "step() (dacbench.wrappers.rewardnoisewrapper method)": [[23, "dacbench.wrappers.RewardNoiseWrapper.step"]], "step() (dacbench.wrappers.statetrackingwrapper method)": [[23, "dacbench.wrappers.StateTrackingWrapper.step"]]}})